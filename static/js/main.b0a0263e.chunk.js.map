{"version":3,"sources":["app/Word.js","app/utility.js","app/Answers.js","app/state/drawings.js","app/Drawable.js","app/Layout.js","app/Particle.js","app/Timer.js","app/logic/BrowserStorage.js","app/logic/Deck.js","app/logic/Player.js","app/logic/Session.js","app/getSession.js","app/Typing.js","app/App.js","serviceWorker.js","index.js"],"names":["DefaultStyle","styled","div","RightStyle","WrongStyle","JustInput","Wrapper","input","rightness","ending","number","hide","className","useKeyboard","handleKeyboard","useEffect","document","addEventListener","removeEventListener","AnswerListTemplate","ul","NormalItem","li","LessUsedItem","MStyle","FStyle","NStyle","NoStyle","Answers","answers","map","x","i","text","m","gender","f","n","prefix","word","withGender","l","key","db","Dexie","version","stores","drawings","table","question","drawing","a","transaction","getItem","item","newItem","id","put","add","load","where","equals","first","CATENARY_COLOR","BRUSH_COLOR","BRUSH_RADUS","LAZY_RADUS","Template","onChange","given","getSaveData","NO_DATA","JSON","stringify","lines","width","height","Drawable","e","canvasRef","current","undo","data","loadSaveData","fetchData","useRef","useViewport","vw","vh","ref","catenaryColor","brushRadius","brushColor","lazyRadius","canvasWidth","canvasHeight","hideGrid","immediateLoading","Global","createGlobalStyle","Root","InfoBox","StatsBox","CenterBox","Center","MyThreeColumns","Circle","p","Divider","hr","Layout","info","center","stats","left","right","done","rotateOnDone","useSpring","config","friction","clamp","from","opacity","transform","transformOrigin","to","style","SelfCenter","ParticleTemplate","hit","Tooltip","Details","span","Particle","y","children","props","content","Timer","durationSec","onDone","useState","started","setStarted","setCurrent","setDone","useInterval","now","Date","difference","differenceInSeconds","useImperativeHandle","start","finish","timeLeft","forwardRef","storageGet","defaultValue","got","localStorage","parse","storageSet","value","setItem","BrowserStorage","allCards","this","point","_getLastPoint","_setLastPoint","_getCardDeltas","getCardPoints","Deck","cards","length","shift","Player","sessionDeck","zeroDeck","hasMore","takeNextCard","Session","storage","getAllCards","cardPoints","getNewPoint","zeroCards","filter","sessionCards","result","Object","entries","sortBy","getReadyCardIds","find","getDecks","player","card","lastCard","recordPoint","delta","getDelta","recordDelta","sessionSingleton","getSession","DURATION","INFO","A_LETTER","NO_INPUT","Typing","good","setGood","bad","setBad","setInput","particles","setParticles","setCard","isChecking","setChecking","isHit","setHit","nextWord","moreParticles","times","angle","random","Math","PI","distance","dx","cos","dy","sin","particle","push","concat","startGame","timerRef","ctrlKey","ignore","trim","sample","re","RegExp","escapeRegExp","expectedWord","withNoSS","replace","versions","addMore","match","matches","recordHit","recordMiss","substring","test","last","beforeLast","use","letter","slice","applyUmlauts","targetColor","color","padding","hideOnDone","xs","setter","links","index","source","target","simulation","forceSimulation","force","forceLink","forceCollide","forceCenter","tick","animateParticles","animation","App","questions","shuffle","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b0a0263e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nlet DefaultStyle = styled.div`\n  color: #06c;\n`\nlet RightStyle = styled.div`\n  color: #0c6;\n`\nlet WrongStyle = styled.div`\n  color: #c66;\n`\n\nexport function JustInput ({ input, rightness }) {\n  let Wrapper\n  if (rightness === null) Wrapper = DefaultStyle\n  if (rightness === true) Wrapper = RightStyle\n  if (rightness === false) Wrapper = WrongStyle\n\n  return <Wrapper>{input}</Wrapper>\n}\n","import { forceCenter, forceCollide, forceLink, forceSimulation } from 'd3-force'\nimport { random, times } from 'lodash'\nimport React, { useEffect } from 'react'\n\nexport function ending (number, ending) {\n  let hide = number === 1 ? 'hide' : 'show'\n  return <span className={hide}>{ending}</span>\n}\n\nexport function distance () {\n  let angle = random(0, Math.PI * 2, true)\n  let distance = random(400, 500)\n  let dx = distance * Math.cos(angle)\n  let dy = distance * Math.sin(angle)\n  return { dx, dy }\n}\n\nexport function useKeyboard (handleKeyboard) {\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboard)\n    return () => {\n      document.removeEventListener('keydown', handleKeyboard)\n    }\n  })\n}\n\nexport function animateParticles (xs, setter) {\n  let links = []\n  let index = 0\n  times(xs.length, x => {\n    times(xs.length, y => {\n      links.push({ source: x, target: y, index })\n      index += 1\n    })\n  })\n  let simulation = forceSimulation(xs)\n    .force('links', forceLink(links))\n    .force('collide', forceCollide(100))\n    .force('center', forceCenter())\n\n  return () => {\n    simulation.tick(100)\n    xs = [...xs]\n    setter(xs)\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nlet AnswerListTemplate = styled.ul`\n  list-style: none;\n  font-size: 50%;\n  color: #888;\n  max-height: 50vh;\n  overflow-y: auto;\n`\n\nlet NormalItem = styled.li`\n`\n\nlet LessUsedItem = styled.li`\n  opacity: 0.5;\n  font-size: 50%;\n`\n\nlet Answers = ({ answers }) => (\n  <AnswerListTemplate>\n    {answers.map((x, i) => {\n      let item = null\n      let text = withGender(x)\n      if (x.l) {\n        item = <LessUsedItem key={i}>{text}</LessUsedItem>\n      } else {\n        item = <NormalItem key={i}>{text}</NormalItem>\n      }\n      return item\n    })}\n  </AnswerListTemplate>\n)\n\nlet MStyle = styled.div`\n  // color: #66f;\n`\nlet FStyle = styled.div`\n  // color: #f66;\n`\nlet NStyle = styled.div`\n  // color: #666;\n`\nlet NoStyle = styled.div``\n\nfunction withGender (x) {\n  let m = x.gender === 'm'\n  let f = x.gender === 'f'\n  let n = x.gender === 'n'\n\n  let prefix = ''\n  if (m) prefix = 'der '\n  if (f) prefix = 'die '\n  if (n) prefix = 'das '\n\n  let Wrapper = NoStyle\n  if (m) Wrapper = MStyle\n  if (f) Wrapper = FStyle\n  if (n) Wrapper = NStyle\n\n  return <Wrapper>{`${prefix}${x.word}`}</Wrapper>\n}\n\nexport default Answers\n","import Dexie from 'dexie';\n\nconst db = new Dexie('DrawingsDatabase')\ndb.version(1).stores({ drawings: \"++id,question,drawing\" });\nlet table = db.drawings\n\nexport async function save(question, drawing) {\n  return db.transaction('rw', table, async () => {\n    let item = await getItem(question)\n    let newItem = { question, drawing }\n    if (item) {\n      let { id } = item\n      return table.put({ id, ...newItem })\n    } else {\n      return table.add(newItem)\n    }\n  })\n}\n\nexport function remove(question) {\n  return db.transaction('rw', table, async () => {\n    let item = await getItem(question)\n    if (item) {\n      let { id } = item\n      return table.delete(id)\n    } else {\n      return\n    }\n  })\n}\n\nexport async function load(question) {\n  let item = await getItem(question)\n  if (item) {\n    return item.drawing\n  } else {\n    return null\n  }\n}\n\nexport function getItem(question) {\n  return table\n    .where('question')\n    .equals(question)\n    .first()\n}\n","import { useViewport } from 'react-viewport-hooks'\nimport CanvasDraw from 'react-canvas-draw'\nimport React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport * as drawings from './state/drawings'\n\nimport { useKeyboard } from './utility'\n\nconst CATENARY_COLOR = '#fff'\nconst BRUSH_COLOR = '#000'\nconst BRUSH_RADUS = 3\nconst LAZY_RADUS = 1\n\nlet Template = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n`\n\n\nlet onChange = (question, given) => {\n  let data = given.getSaveData()\n  // data = JSON.stringify(data)\n  drawings.save(question, data);\n}\n\nconst NO_DATA = JSON.stringify({\n  lines: [],\n  width: 10,\n  height: 10,\n})\n\n// non-ideal to pass it there but so what\nfunction Drawable({ question }) {\n  function handleKeyboard (e) {\n    if (e.key === 'Delete') {\n      canvasRef.current.undo()\n    }\n  }\n  useKeyboard(handleKeyboard)\n\n  useEffect(() => {\n    async function fetchData() {\n      let data = await drawings.load(question)\n      if (data) {\n        // data = JSON.parse(data)\n        canvasRef.current && canvasRef.current.loadSaveData(data)\n      } else {\n        canvasRef.current && canvasRef.current.loadSaveData(NO_DATA)\n      }\n    }\n    fetchData()\n  }, [question])\n\n  let canvasRef = useRef()\n\n  const { vw, vh } = useViewport()\n\n  return <Template>\n    <CanvasDraw\n      ref={canvasRef}\n      onChange={x => onChange(question, x)}\n      catenaryColor={CATENARY_COLOR}\n      brushRadius={BRUSH_RADUS}\n      brushColor={BRUSH_COLOR}\n      lazyRadius={LAZY_RADUS}\n      canvasWidth={vw}\n      canvasHeight={vh}\n      hideGrid={true}\n      immediateLoading={true}\n    />\n  </Template>\n}\n\nexport default Drawable\n","import { useSpring, animated } from 'react-spring'\nimport React from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nlet Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  html, body, #root, #root > div {\n    height: 100%;\n  }\n  .show, .hide {\n    transition: opacity 0.3s;\n  }\n  .show {\n    opacity: 1;\n  }\n  .hide {\n    opacity: 0;\n  }\n`\n\nlet Root = styled.div`\n  font-size: 48pt;\n  display: flex;\n  overflow: hidden;\n  pointer-events: none;\n`\n\nlet InfoBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet StatsBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  right: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet CenterBox = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`\n\nlet Center = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n`\n\nlet CENTER_COLOR_DEFAULT = '#06c'\nexport let CENTER_COLOR_GREEN = '#0c6'\nexport let CENTER_COLOR_RED = '#c66'\n\nlet CENTER_DELTA = 38\nlet CENTER_SIZE = 10\nlet TOP = 30\nlet MIDDLE = 20\n\nlet MyThreeColumns = styled.div`\n  width: 100%;\n  display: flex;\n  > div {\n    top: ${TOP}%;\n    position: absolute;\n  }\n  > div:nth-child(1) {\n    right: calc(50% + ${MIDDLE}px);\n  }\n  > div:nth-child(2) {\n    // Circle below\n  }\n  > div:nth-child(3) {\n    left: calc(50% + ${MIDDLE}px);\n  }\n`\n\nlet Circle = styled.div`\n  left: 50%;\n  transform: translateY(${CENTER_DELTA}px) translateX(-50%);\n  height: ${CENTER_SIZE}px;\n  width: ${CENTER_SIZE}px;\n  border-radius: 50%;\n  background-color: ${p =>\n    p.rightness === null\n      ? CENTER_COLOR_DEFAULT\n      : p.rightness === true\n      ? CENTER_COLOR_GREEN\n      : CENTER_COLOR_RED};\n`\n\n// let AtRight = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   right: 0;\n//   outline: solid 3px orange;\n// `\n\n// let AtLeft = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   left: 0;\n//   outline: solid 3px blue;\n// `\n\nlet Divider = styled.hr`\n  color: #fff;\n  margin: 10px 0;\n`\n\n// info - either null or string[]\n// center - element\n// stats - element\nfunction Layout ({ rightness, info, center, stats, left, right, done }) {\n  let rotateOnDone = useSpring({\n    config: {\n      friction: 1,\n      clamp: 1\n    },\n    from: {\n      width: '100%',\n      opacity: 1,\n      transform: 'rotate(0deg) scale(1)',\n      transformOrigin: 'center'\n    },\n    to: !done\n      ? []\n      : [\n          {\n            opacity: 0.5,\n            transform: 'rotate(360deg) scale(0.5)'\n          },\n          {\n            opacity: 0,\n            transform: 'rotate(0deg) scale(0)'\n          }\n        ]\n  })\n\n  return (\n    <Root>\n      <Global />\n      <CenterBox>\n        <Center>{center}</Center>\n      </CenterBox>\n      <animated.div style={rotateOnDone}>\n        <MyThreeColumns>\n          <div>{left}</div>\n          <Circle rightness={rightness} />\n          <div>{right}</div>\n        </MyThreeColumns>\n      </animated.div>\n      {!info ? null : (\n        <InfoBox>\n          <ul>\n            {info.map((x, i) => (\n              x === '---' ? <Divider key={i} /> :\n              <li key={i}>{x}</li>\n            ))}\n          </ul>\n        </InfoBox>\n      )}\n      <StatsBox>{stats}</StatsBox>\n    </Root>\n  )\n}\n\nexport default Layout\n","import { useSpring, animated } from 'react-spring'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CENTER_COLOR_GREEN, CENTER_COLOR_RED } from './Layout'\nimport Answers from './Answers'\n\nlet SelfCenter = styled.div`\n  transform: translate(-50%, -50%);\n`\nlet ParticleTemplate = styled.div`\n  position: absolute;\n  font-size: 32px;\n  white-space: nowrap;\n`\n\nlet Wrapper = styled.div`\n  text-decoration: ${p => (p.done ? 'none' : p.hit ? 'none' : 'line-through')};\n  color: ${p =>\n    p.done ? (p.hit ? CENTER_COLOR_GREEN : CENTER_COLOR_RED) : '#ddd'};\n`\n\nlet Tooltip = styled.div`\n  & > span {\n    display: none;\n  }\n\n  &:hover {\n    & > span {\n      display: block;\n    }\n  }\n\n  position: relative;\n`\nlet Details = styled.span`\n  position: absolute;\n  left: 0;\n  top: 30px;\n  background-color: white;\n  z-index: 100;\n`\n\nfunction Particle ({ x, y, children, hit, word, done, answers }) {\n  let props = useSpring({\n    transform: `translate(${x}px, ${y}px)`,\n    from: {\n      transform: `translate(${x}px, ${y}px)`\n    }\n  })\n  let content = !done ? (\n    word\n  ) : (\n    <Tooltip>\n      {word}\n      <Details>\n        <Answers answers={answers} />\n      </Details>\n    </Tooltip>\n  )\n  return (\n    <ParticleTemplate>\n      <animated.div style={props}>\n        <SelfCenter>\n          <Wrapper done={done} hit={hit}>\n            {content}\n          </Wrapper>\n        </SelfCenter>\n      </animated.div>\n    </ParticleTemplate>\n  )\n  // <Word input={x.input} word={x.word} finish={true} />\n  // </Particle>\n}\n\nexport default Particle\n","import { differenceInSeconds } from 'date-fns'\nimport React, { useState, useImperativeHandle, forwardRef } from 'react'\nimport useInterval from '@use-it/interval'\n\nlet CHECK_INTERVAL = 100\n\nlet Timer = ({ durationSec, onDone }, ref) => {\n  let [started, setStarted] = useState(null)\n  let [current, setCurrent] = useState(null)\n  let [done, setDone] = useState(false)\n\n  useInterval(() => {\n    if (done) return\n    if (!started) return\n\n    let now = new Date()\n    let difference = differenceInSeconds(now, started)\n    if (difference !== current) setCurrent(difference)\n    let timeLeft = durationSec - current\n    if (timeLeft <= 0) {\n      onDone()\n      setDone(true)\n    }\n  }, CHECK_INTERVAL)\n\n  useImperativeHandle(ref, () => ({\n    start: () => {\n      if (!started) setStarted(new Date())\n    },\n    finish: () => {\n      if (!done) {\n        onDone()\n        setDone(true)\n      }\n    }\n    // clear: () => to start after done have finished\n  }))\n\n  let timeLeft = durationSec - current\n\n  return <div>{timeLeft} sec.</div>\n}\nTimer = forwardRef(Timer)\n\nexport default Timer\n","const CARD_POINTS_KEY = 'CARD_POINTS_KEY'\nconst CARD_DELTAS_KEY = 'CARD_DELTAS_KEY'\nconst LAST_POINT_KEY = 'LAST_POINT_KEY'\n\nfunction storageGet(key, defaultValue) {\n  let got = localStorage.getItem(key)\n  if (got) return JSON.parse(got)\n  return defaultValue\n}\nfunction storageSet(key, value) {\n  value = JSON.stringify(value)\n  localStorage.setItem(key, value)\n}\n\nclass BrowserStorage {\n  constructor(allCards) {\n    this.allCards = allCards\n  }\n\n  getAllCards() {\n    return this.allCards\n  }\n\n  getCardPoints() {\n    return storageGet(CARD_POINTS_KEY, {})\n  }\n\n  _getLastPoint() {\n    return storageGet(LAST_POINT_KEY, 0)\n  }\n  _setLastPoint(value) {\n    storageSet(LAST_POINT_KEY, value)\n  }\n\n  getNewPoint() {\n    let point = this._getLastPoint() + 1\n    this._setLastPoint(point)\n    return point\n  }\n\n  _getCardDeltas() {\n    return storageGet(CARD_DELTAS_KEY, {})\n  }\n\n  getDelta(id) {\n    return this._getCardDeltas()[id] || 1\n  }\n\n  recordDelta(id, value) {\n    let data = this._getCardDeltas()\n    data[id] = value\n    storageSet(CARD_DELTAS_KEY, data)\n  }\n\n  recordPoint(id, value) {\n    let data = this.getCardPoints()\n    data[id] = value\n    storageSet(CARD_POINTS_KEY, data)\n  }\n}\n\nexport default BrowserStorage\n","class Deck {\n  constructor(cards) {\n    this.cards = cards\n  }\n  hasMore() {\n    return !!this.cards.length\n  }\n  takeNextCard() {\n    return this.cards.shift()\n  }\n}\n\nexport default Deck\n","class Player {\n  constructor(sessionDeck, zeroDeck) {\n    this.sessionDeck = sessionDeck\n    this.zeroDeck = zeroDeck\n  }\n  takeNextCard() {\n    if (this.sessionDeck.hasMore()) {\n      return this.sessionDeck.takeNextCard()\n    } else {\n      return this.zeroDeck.takeNextCard()\n    }\n  }\n}\n\nexport default Player\n","import Deck from './Deck'\nimport Player from './Player'\nimport { sortBy } from 'lodash'\n\nclass Session {\n  constructor(storage) {\n    this.storage = storage\n\n    let allCards = this.storage.getAllCards()\n    let cardPoints = this.storage.getCardPoints()\n    let point = this.storage.getNewPoint()\n    this.point = point\n\n    let {\n      zeroDeck,\n      sessionDeck\n    } = getDecks(allCards, cardPoints, point)\n\n    let player = new Player(sessionDeck, zeroDeck)\n    this.player = player\n  }\n\n  takeNextCard() {\n    let card = this.player.takeNextCard()\n    this.lastCard = card\n    this.storage.recordPoint(card.id, this.point)\n    return card\n  }\n\n  // delta = 1 for new cards from the zero deck\n  // so on the first right answer you get it in the second next session\n  recordHit() {\n    let id = this.lastCard.id\n    let delta = this.storage.getDelta(id) + 1\n    let point = this.point + delta\n    this.storage.recordDelta(id, delta)\n    this.storage.recordPoint(id, point)\n  }\n\n  recordMiss() {\n    let id = this.lastCard.id\n    let delta = 1\n    let point = this.point + delta\n    this.storage.recordDelta(id, delta)\n    this.storage.recordPoint(id, point)\n  }\n}\n\nfunction getDecks(allCards, cardPoints, point) {\n  let zeroCards = allCards.filter(x => !cardPoints[x.id])\n  let zeroDeck = new Deck(zeroCards)\n\n  let readyIds = getReadyCardIds(cardPoints, point)\n  let sessionCards = readyIds.map(id =>\n    // eslint-disable-next-line\n    allCards.find(x => x.id == id)\n  )\n  let sessionDeck = new Deck(sessionCards)\n\n  return {\n    zeroDeck,\n    sessionDeck,\n  }\n}\n\nfunction getReadyCardIds(cardPoints, point) {\n  let result = Object.entries(cardPoints)\n    .filter(([id, cardPoint]) =>\n      cardPoint <= point\n    )\n  result = sortBy(result, x => x[0]) // id\n  return result.map(([id, _point]) => id)\n}\n\nexport default Session\n","import BrowserStorage from './logic/BrowserStorage';\nimport Session from './logic/Session';\n\nlet sessionSingleton = null\n\nfunction getSession(allCards) {\n  if (sessionSingleton) return sessionSingleton\n  let storage = new BrowserStorage(allCards)\n  sessionSingleton = new Session(storage)\n  return sessionSingleton\n}\n\nexport default getSession\n","import { animated, useSpring } from 'react-spring'\nimport { sample, escapeRegExp, times } from 'lodash'\nimport React, { useState, useRef } from 'react'\n\nimport { JustInput } from './Word'\nimport { animateParticles, distance, ending, useKeyboard } from './utility'\nimport Answers from './Answers'\nimport Drawable from './Drawable';\nimport Layout from './Layout'\nimport Particle from './Particle'\nimport Timer from './Timer'\nimport getSession from './getSession';\n\nlet DURATION = 60\n\nlet INFO = [\n  'Type a translation with enter when you are ready',\n  'After any input the timer starts',\n  '---',\n  '«ä» can be produced by typing «a:» or «a\"»',\n  '«ß» can be replaced with just «ss»',\n  'Omit der/die/das if you feel like',\n  '---',\n  'If you need to restart — reload the page',\n  'Press esc to finish early',\n  '---',\n  'You can draw stuff (press delete to undo/delete last line)',\n  'The drawing will be shown with that word',\n]\n\nlet A_LETTER = /^.$/\n\nfunction matches (word, answers) {\n  let re = new RegExp(`\\b${escapeRegExp(word)}\\b`)\n\n  let answer = answers.find(x => {\n    let expectedWord = x.word\n    let withNoSS = expectedWord.replace(/ß/g, 'ss')\n\n    let versions = [expectedWord, withNoSS]\n\n    let addMore = f => {\n      let got = versions.map(f)\n      versions.push(...got)\n    }\n\n    if (x.gender === 'm') addMore(x => `der ${x}`)\n    if (x.gender === 'f') addMore(x => `die ${x}`)\n    if (x.gender === 'n') addMore(x => `das ${x}`)\n\n    return versions.find(x => x === word || x.match(re))\n  })\n  return !!answer\n}\n\nfunction Typing () {\n  let [started, setStarted] = useState(false)\n  let [done, setDone] = useState(false)\n  let [good, setGood] = useState(0)\n  let [bad, setBad] = useState(0)\n\n  let [input, setInput] = useState('')\n  let [particles, setParticles] = useState([])\n  // let [wordIndex, setWordIndex] = useState(0)\n  let [card, setCard] = useState(null)\n  card = getSession().lastCard\n  if (!card) {\n    setCard(getSession().lastCard)\n  }\n  let question = card ? card : { question: '', answers: [] }\n\n  let [isChecking, setChecking] = useState(false)\n  let [isHit, setHit] = useState(false)\n\n  let nextWord = () => {\n    let moreParticles = []\n    times(1, () => {\n      let { dx, dy } = distance()\n      let particle = {\n        input,\n        word: question.question,\n        answers: question.answers,\n        x: dx,\n        y: dy,\n        hit: isHit\n      }\n\n      moreParticles.push(particle)\n    })\n\n    setParticles(particles.concat(moreParticles))\n    setCard(getSession().takeNextCard())\n    setInput('')\n  }\n\n  let startGame = () => {\n    timerRef.current.start()\n    setStarted(true)\n  }\n\n  function handleKeyboard (e) {\n    if (done) return\n    if (e.ctrlKey) return // reloading ctrl+r\n\n    let ignore = isChecking\n\n    if (e.key === 'Escape') {\n      timerRef.current.finish()\n    } else if (e.key === 'Enter') {\n      startGame()\n      // if (input === '') return // NOTE: double presses are ok.....\n      if (isChecking) {\n        setChecking(false)\n        nextWord()\n      } else {\n        input = input.trim()\n        if (!input) {\n          input = noInput()\n          setInput(input)\n        }\n\n        let hit = matches(input, question.answers)\n\n        if (hit) {\n          setGood(good + 1)\n          getSession().recordHit()\n        } else {\n          setBad(bad + 1)\n          getSession().recordMiss()\n        }\n\n        setHit(hit)\n        setChecking(true)\n      }\n    } else if (e.key === 'Backspace') {\n      if (ignore) return\n      setInput(input.substring(0, input.length - 1))\n    } else if (A_LETTER.test(e.key)) {\n      if (ignore) return\n      startGame()\n      input += e.key\n      setInput(applyUmlauts(input))\n    }\n  }\n\n  useKeyboard(handleKeyboard)\n\n  let timerRef = useRef()\n\n  let onTimer = () => {\n    setDone(true)\n    let animation = animateParticles(particles, setParticles)\n    animation()\n  }\n\n  let targetColor = done ? '#06c' : 'gray'\n  let props = useSpring({\n    color: targetColor,\n    padding: done ? 30 : 0,\n    from: {\n      color: 'gray',\n      padding: 0\n    }\n  })\n  let hideOnDone = useSpring({ opacity: done ? 0 : 1, from: { opacity: 1 } })\n\n  let rightness = isChecking ? isHit : null\n  return (\n    <>\n    <Drawable question={question.question} />\n    <Layout\n      done={done}\n      rightness={rightness}\n      info={started ? null : INFO}\n      center={particles.map((x, i) => (\n        <Particle\n          answers={x.answers}\n          x={x.x}\n          y={x.y}\n          hit={x.hit}\n          word={x.word}\n          key={i}\n          done={done}\n        />\n      ))}\n      left={question.question}\n      right={\n        <>\n          <JustInput input={input} rightness={rightness} />\n          {!isChecking ? null : (\n            <div>\n              <Answers answers={question.answers} />\n            </div>\n          )}\n        </>\n      }\n      stats={\n        <animated.div style={props}>\n          <animated.div style={hideOnDone}>\n            <Timer ref={timerRef} durationSec={DURATION} onDone={onTimer} />\n          </animated.div>\n          <div>\n            {good} hit{ending(good, 's')}\n          </div>\n          <div>\n            {bad} miss{ending(bad, 'es')}\n          </div>\n        </animated.div>\n      }\n    />\n  </>\n  )\n}\n\nfunction applyUmlauts (text) {\n  if (text.length < 2) return text\n  let last = text[text.length - 1]\n  let beforeLast = text[text.length - 2]\n\n  if (last !== ':' && last !== '\"') return text\n\n  let use = letter => text.slice(0, text.length - 2) + letter\n\n  if (beforeLast === 'A') return use('Ä')\n  if (beforeLast === 'a') return use('ä')\n  if (beforeLast === 'O') return use('Ö')\n  if (beforeLast === 'o') return use('ö')\n  if (beforeLast === 'U') return use('Ü')\n  if (beforeLast === 'u') return use('ü')\n\n  return text\n}\n\nlet NO_INPUT = ['???']\nfunction noInput () {\n  return sample(NO_INPUT)\n}\n\nexport default Typing\n","import { shuffle } from 'lodash'\nimport React from 'react'\n\nimport Typing from './Typing'\nimport getSession from './getSession';\nimport questions from './data/questions.json'\n\nfunction App () {\n  let xs = questions\n  if (process.env.NODE_ENV === 'development') {\n    xs = xs.slice(0,3)\n  }\n  xs = shuffle(xs)\n  getSession(xs).takeNextCard() // just starts everything\n  return <Typing questions={xs} />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}