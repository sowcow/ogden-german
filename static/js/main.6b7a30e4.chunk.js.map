{"version":3,"sources":["app/utility.js","app/Layout.js","app/Particle.js","app/Timer.js","app/Word.js","app/Typing.js","app/App.js","serviceWorker.js","index.js"],"names":["ending","number","hide","className","Global","createGlobalStyle","Root","styled","div","InfoBox","StatsBox","CenterBox","Center","MyThreeColumns","Circle","p","rightness","Layout","info","center","stats","left","right","map","x","i","key","SelfCenter","ParticleTemplate","focus","Particle","dx","dy","children","style","transform","Timer","ref","durationSec","onDone","useState","started","setStarted","current","setCurrent","done","setDone","useInterval","now","Date","difference","differenceInSeconds","useImperativeHandle","start","timeLeft","forwardRef","Right","Err","Rest","ErrRest","CursorStyle","CursorInner","Cursor","DefaultStyle","RightStyle","WrongStyle","JustInput","Wrapper","input","trim","Word","word","hideCursor","finish","err","rest","mistaken","times","Math","max","length","DURATION","INFO","A_LETTER","AnswerList","ul","MStyle","FStyle","NStyle","NoStyle","NO_INPUT","Typing","questions","good","setGood","bad","setBad","setInput","particles","setParticles","wordIndex","setWordIndex","question","isChecking","setChecking","isHit","setHit","nextWord","angle","random","PI","distance","cos","sin","particle","concat","startGame","timerRef","handleKeyboard","useEffect","document","addEventListener","removeEventListener","useKeyboard","e","ctrlKey","ignore","sample","hit","answers","find","expectedWord","withNoSS","replace","versions","addMore","f","got","push","gender","substring","test","text","last","beforeLast","use","letter","slice","applyUmlauts","useRef","targetColor","props","useSpring","color","padding","from","hideOnDone","opacity","config","friction","clamp","to","m","n","prefix","withGender","App","xs","shuffle","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6b7a30e4.chunk.js","sourcesContent":["import React from 'react'\nimport { random } from 'lodash'\nimport { useEffect } from 'react'\n\nexport function ending (number, ending) {\n  let hide = number === 1 ? 'hide' : 'show'\n  return <span className={hide}>{ending}</span>\n}\n\nexport function distance () {\n  let angle = random(0, Math.PI * 2, true)\n  let distance = random(400, 500)\n  let dx = distance * Math.cos(angle)\n  let dy = distance * Math.sin(angle)\n  return { dx, dy }\n}\n\nexport function useKeyboard (handleKeyboard) {\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboard)\n    return () => {\n      document.removeEventListener('keydown', handleKeyboard)\n    }\n  })\n}\n","import React from 'react'\nimport styled, { css, createGlobalStyle } from 'styled-components'\n\nlet Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  html, body, #root, #root > div {\n    height: 100%;\n  }\n  .show, .hide {\n    transition: opacity 0.3s;\n  }\n  .show {\n    opacity: 1;\n  }\n  .hide {\n    opacity: 0;\n  }\n`\n\nlet Root = styled.div`\n  font-size: 48pt;\n  display: flex;\n  overflow: hidden;\n`\n\nlet InfoBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet StatsBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  right: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet CenterBox = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`\n\nlet Center = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n`\n\nlet CENTER_COLOR_DEFAULT = '#06c'\nlet CENTER_COLOR_GREEN = '#0c6'\nlet CENTER_COLOR_RED = '#c66'\n\nlet CENTER_DELTA = 38\nlet CENTER_SIZE = 10\nlet TOP = 30\nlet MIDDLE = 20\n\nlet MyThreeColumns = styled.div`\n  width: 100%;\n  display: flex;\n  > div {\n    top: ${TOP}%;\n    position: absolute;\n  }\n  > div:nth-child(1) {\n    right: calc(50% + ${MIDDLE}px);\n  }\n  > div:nth-child(2) {\n    // Circle below\n  }\n  > div:nth-child(3) {\n    left: calc(50% + ${MIDDLE}px);\n  }\n`\n\nlet Circle = styled.div`\n  left: 50%;\n  transform: translateY(${CENTER_DELTA}px) translateX(-50%);\n  height: ${CENTER_SIZE}px;\n  width: ${CENTER_SIZE}px;\n  border-radius: 50%;\n  background-color: ${p =>\n    p.rightness === null ? CENTER_COLOR_DEFAULT : (\n      p.rightness === true ? CENTER_COLOR_GREEN : CENTER_COLOR_RED\n    )\n  };\n`\n\n// let AtRight = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   right: 0;\n//   outline: solid 3px orange;\n// `\n\n// let AtLeft = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   left: 0;\n//   outline: solid 3px blue;\n// `\n\n// info - either null or string[]\n// center - element\n// stats - element\nfunction Layout ({ rightness, info, center, stats, left, right }) {\n  return (\n    <Root>\n      <Global />\n      <CenterBox>\n        <Center>\n          {center}\n        </Center>\n      </CenterBox>\n      <MyThreeColumns>\n        <div>\n          {left}\n        </div>\n        <Circle rightness={rightness} />\n        <div>\n          {right}\n        </div>\n      </MyThreeColumns>\n      {!info ? null : (\n        <InfoBox>\n          <ul>\n            {info.map((x, i) => (\n              <li key={i}>{x}</li>\n            ))}\n          </ul>\n        </InfoBox>\n      )}\n      <StatsBox>{stats}</StatsBox>\n    </Root>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport styled from 'styled-components'\n\nlet SelfCenter = styled.div`\n  transform: translate(-50%, -50%);\n`\nlet ParticleTemplate = styled.div`\n  * {\n    ${({ focus }) => (focus ? '' : 'color: #ddd !important;')}\n  }\n  ${({ focus }) => (focus ? '' : 'font-size: 32px;')}\n  // position: absolute;\n  white-space: nowrap;\n`\n\nfunction Particle ({ dx, dy, children, focus }) {\n  let style = {\n    transform: `translate(${dx}px, ${dy}px)`\n  }\n  return (\n    <ParticleTemplate style={style} focus={focus}>\n      <SelfCenter>{children}</SelfCenter>\n    </ParticleTemplate>\n  )\n}\n\nexport default Particle\n","import { differenceInSeconds } from 'date-fns'\nimport React, { useState, useImperativeHandle, forwardRef } from 'react'\nimport useInterval from '@use-it/interval'\n\nlet CHECK_INTERVAL = 100\n\nlet Timer = ({ durationSec, onDone }, ref) => {\n  let [started, setStarted] = useState(null)\n  let [current, setCurrent] = useState(null)\n  let [done, setDone] = useState(false)\n\n  useInterval(() => {\n    if (done) return\n    if (!started) return\n\n    let now = new Date()\n    let difference = differenceInSeconds(now, started)\n    if (difference !== current) setCurrent(difference)\n    let timeLeft = durationSec - current\n    if (timeLeft <= 0) {\n      onDone()\n      setDone(true)\n    }\n  }, CHECK_INTERVAL)\n\n  useImperativeHandle(ref, () => ({\n    start: () => {\n      if (!started) setStarted(new Date())\n    }\n    // clear: () => to start after done have finished\n  }))\n\n  let timeLeft = durationSec - current\n\n  return <div>{timeLeft} sec.</div>\n}\nTimer = forwardRef(Timer)\n\nexport default Timer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { times } from 'lodash'\n\nlet Right = styled.div`\n  color: #06c;\n  display: inline;\n`\nlet Err = styled.div`\n  display: inline;\n  color: #f30;\n  text-decoration: line-through;\n`\nlet Rest = styled.div`\n  display: inline;\n  color: #b3b3cc;\n`\nlet ErrRest = styled.div`\n  display: inline;\n  color: #b3b3cc;\n  text-decoration: line-through;\n`\nlet CursorStyle = styled.div`\n  display: inline;\n  position: relative;\n`\nlet CursorInner = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  transform: translateX(-0px);\n  border-right: solid 1px #345;\n  height: 100%;\n`\nlet Cursor = () => (\n  <CursorStyle>\n    <CursorInner />\n  </CursorStyle>\n)\n\nlet DefaultStyle = styled.div`\n  color: #06c;\n`\nlet RightStyle = styled.div`\n  color: #0c6;\n`\nlet WrongStyle = styled.div`\n  color: #c66;\n`\n\n// let Hide = styled.div`\n//   visibility: hidden;\n// `\n\nexport function JustInput({ input, rightness }) {\n  let given = input.trim() !== ''\n\n  let Wrapper\n  if (rightness === null) Wrapper = DefaultStyle\n  if (rightness === true) Wrapper = RightStyle\n  if (rightness === false) Wrapper = WrongStyle\n\n  // if (!given) return <Hide><Wrapper>none</Wrapper></Hide>\n\n  return <Wrapper>{input}</Wrapper>\n\n  // return <Word\n  //   input={input}\n  //   word={input}\n  //   focus={focus}\n  // />\n}\n\nfunction Word ({ input, word, focus, hideCursor, finish }) {\n  let right = ''\n  let err = ''\n  let rest = ''\n\n  let mistaken = false\n  times(Math.max(word.length, input.length), i => {\n    if (i < input.length) {\n      if (!mistaken) {\n        mistaken = i >= word.length || input[i] !== word[i]\n      }\n      if (mistaken) {\n        err += input[i]\n      } else {\n        right += input[i]\n      }\n    } else {\n      rest += word[i]\n    }\n  })\n\n  return (\n    <>\n      <Right>{right}</Right>\n      <Err>{err}</Err>\n      {focus && !hideCursor ? <Cursor /> : null}\n      {finish ? <ErrRest>{rest}</ErrRest> : <Rest>{rest}</Rest>}\n    </>\n  )\n}\n\nexport default Word\n","import { animated, useSpring } from 'react-spring'\nimport React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport { distance, ending, useKeyboard } from './utility'\nimport Layout from './Layout'\nimport Particle from './Particle'\nimport Timer from './Timer'\nimport Word, { JustInput } from './Word';\n\nimport { sample } from 'lodash'\n\nlet DURATION = 60\n\nlet INFO = [\n  'Type a translation finishing with enter',\n  'Umlauts can be produced by typing a: or a\"',\n  'ß can be replaced with just \"ss\"',\n  'The timer starts after any input',\n  'If you need to restart — reload the page;'\n]\n\nlet A_LETTER = /^.$/\n\nlet AnswerList = styled.ul`\n  list-style: none;\n  font-size: 50%;\n  color: #888;\n`\n\nfunction matches(word, answers) {\n  let answer = answers.find(x => {\n    let expectedWord = x.word\n    let withNoSS = expectedWord.replace(/ß/g, 'ss')\n\n    let versions = [\n      expectedWord,\n      withNoSS,\n    ]\n\n    let addMore = f => {\n      let got = versions.map(f)\n      versions.push(...got)\n    }\n\n    if (x.gender === 'm') addMore(x => `der ${x}`)\n    if (x.gender === 'f') addMore(x => `die ${x}`)\n    if (x.gender === 'n') addMore(x => `das ${x}`)\n\n    return versions.find(x => x === word)\n  })\n  return !!answer\n}\n\nfunction Typing ({ questions }) {\n  let [started, setStarted] = useState(false)\n  let [done, setDone] = useState(false)\n  let [good, setGood] = useState(0)\n  let [bad, setBad] = useState(0)\n\n  let [input, setInput] = useState('')\n  let [particles, setParticles] = useState([])\n  let [wordIndex, setWordIndex] = useState(0)\n  let question = questions[wordIndex]\n\n  let [isChecking, setChecking] = useState(false)\n  let [isHit, setHit] = useState(false)\n\n  let nextWord = () => {\n    let { dx, dy } = distance()\n    let particle = { input, word: question.question, dx, dy }\n\n    setParticles(particles.concat(particle))\n    setWordIndex(wordIndex + 1)\n    setInput('')\n  }\n\n  let startGame = () => {\n    timerRef.current.start()\n    setStarted(true)\n  }\n\n  function handleKeyboard (e) {\n    if (done) return\n    if (e.ctrlKey) return // reloading ctrl+r\n\n    let ignore = isChecking\n\n    if (e.key === 'Enter') {\n      // if (input === '') return // NOTE: double presses are ok.....\n      if (isChecking) {\n        setChecking(false)\n        nextWord()\n      } else {\n        input = input.trim()\n        if (!input) {\n          input = noInput()\n          setInput(input)\n        }\n\n        let hit = matches(input, question.answers)\n\n        if (hit) {\n          setGood(good + 1)\n        } else {\n          setBad(bad + 1)\n        }\n\n        setHit(hit)\n        setChecking(true)\n      }\n    } else if (e.key === 'Backspace') {\n      if (ignore) return\n      setInput(input.substring(0, input.length - 1))\n    } else if (A_LETTER.test(e.key)) {\n      if (ignore) return\n      startGame()\n      input += e.key\n      setInput(applyUmlauts(input))\n    }\n  }\n\n  useKeyboard(handleKeyboard)\n\n  let timerRef = useRef()\n\n  let onTimer = () => {\n    setDone(true)\n  }\n\n  let targetColor = done ? '#06c' : 'gray'\n  let props = useSpring({\n    color: targetColor,\n    padding: done ? 30 : 0,\n    from: {\n      color: 'gray',\n      padding: 0\n    }\n  })\n  let hideOnDone = useSpring({ opacity: done ? 0 : 1, from: { opacity: 1 } })\n\n  let rotateOnDone = useSpring({\n    config: {\n      friction: 1,\n      clamp: 1\n    },\n    from: {\n      opacity: 1,\n      transform: 'rotate(0deg) scale(1)'\n    },\n    to: !done\n      ? []\n      : [\n          {\n            opacity: 1,\n            transform: 'rotate(360deg) scale(1.1)'\n          },\n          {\n            opacity: 0,\n            transform: 'rotate(0deg) scale(0)'\n          }\n        ]\n  })\n\n      // left={\n      //   <Particle dx={0} dy={0} focus={true}>\n      //     <animated.div style={rotateOnDone}>\n      //       <Word input={input} word={word} focus={true} hideCursor={done} />\n      //     </animated.div>\n      //   </Particle>\n      // }\n      // right={\n      //   <Particle dx={0} dy={0} focus={true}>\n      //     <animated.div style={rotateOnDone}>\n      //       <Word input={input} word={word} focus={true} hideCursor={done} />\n      //     </animated.div>\n      //   </Particle>\n      // }\n  let rightness = isChecking ? isHit : null\n  return (\n    <Layout\n      rightness={rightness}\n      info={started ? null : INFO}\n      center={\n        particles.map((x, i) => (\n          <Particle dx={x.dx} dy={x.dy} key={i}>\n            <Word input={x.input} word={x.word} finish={true} />\n          </Particle>\n        ))\n      }\n      left={question.question}\n      right={<>\n        <JustInput input={input} rightness={rightness} />\n        { !isChecking ? null :\n          <div>\n            <AnswerList>\n              {\n                question.answers.map((x, i) =>\n                  <li key={i}>{ withGender(x) }</li>\n                )\n              }\n            </AnswerList>\n          </div>\n        }\n      </>}\n      stats={\n        <animated.div style={props}>\n          <animated.div style={hideOnDone}>\n            <Timer ref={timerRef} durationSec={DURATION} onDone={onTimer} />\n          </animated.div>\n          <div>\n            {good} hit{ending(good, 's')}\n          </div>\n          <div>\n            {bad} miss{ending(bad, 'es')}\n          </div>\n        </animated.div>\n      }\n    />\n  )\n}\n\nlet MStyle = styled.div`\n  // color: #66f;\n`\nlet FStyle = styled.div`\n  // color: #f66;\n`\nlet NStyle = styled.div`\n  // color: #666;\n`\nlet NoStyle = styled.div``\n\nfunction withGender(x) {\n  let m = x.gender === 'm'\n  let f = x.gender === 'f'\n  let n = x.gender === 'n'\n\n  let prefix = ''\n  if (m) prefix = 'der '\n  if (f) prefix = 'die '\n  if (n) prefix = 'das '\n\n  let Wrapper = NoStyle\n  if (m) Wrapper = MStyle\n  if (f) Wrapper = FStyle\n  if (n) Wrapper = NStyle\n\n  return <Wrapper>{`${prefix}${x.word}`}</Wrapper>\n}\n\nfunction applyUmlauts(text) {\n  if (text.length < 2) return text\n  let last = text[text.length - 1]\n  let beforeLast = text[text.length - 2]\n\n  if (last !== ':' && last !== '\"') return text\n\n  let use = letter =>\n    text.slice(0, text.length - 2) + letter\n\n  if (beforeLast === 'A') return use('Ä')\n  if (beforeLast === 'a') return use('ä')\n  if (beforeLast === 'O') return use('Ö')\n  if (beforeLast === 'o') return use('ö')\n  if (beforeLast === 'U') return use('Ü')\n  if (beforeLast === 'u') return use('ü')\n\n  return text\n}\n\nlet NO_INPUT = [\n  '???',\n]\nfunction noInput() {\n  return sample(NO_INPUT)\n}\n\nexport default Typing\n","import React from 'react'\n\nimport Typing from './Typing'\nimport questions from './data/questions.json'\nimport { shuffle } from 'lodash'\n\nfunction App () {\n  let xs = shuffle(questions)\n  return <Typing questions={xs} />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}