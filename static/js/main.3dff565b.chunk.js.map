{"version":3,"sources":["app/hooks/useFinished.js","app/Word.js","app/utility.js","app/Answers.js","app/state/drawings.js","app/Drawable.js","app/Layout.js","app/Particle.js","app/Timer.js","app/logic/BrowserStorage.js","app/logic/Deck.js","app/logic/Player.js","app/logic/Session.js","app/getSession.js","app/hooks/useDrawing.js","app/Typing.js","app/App.js","serviceWorker.js","index.js"],"names":["Get","createContext","Set","useGetFinished","useContext","ProvideFinished","children","useState","state","setState","Provider","value","DefaultStyle","styled","div","RightStyle","WrongStyle","JustInput","Wrapper","input","rightness","ending","number","hide","className","useKeyboard","handleKeyboard","useEffect","document","addEventListener","removeEventListener","AnswerListTemplate","ul","NormalItem","li","LessUsedItem","MStyle","FStyle","NStyle","NoStyle","Answers","answers","map","x","i","text","m","gender","f","n","prefix","word","withGender","l","key","db","Dexie","version","stores","drawings","table","question","drawing","a","transaction","getItem","item","newItem","id","put","add","load","where","equals","first","CATENARY_COLOR","BRUSH_COLOR","BRUSH_RADUS","LAZY_RADUS","Template","EditingFlag","onChange","given","getSaveData","NO_DATA","JSON","stringify","lines","width","height","Drawable","editing","e","canvasRef","current","undo","data","loadSaveData","fetchData","useRef","useViewport","vw","vh","finished","ref","disabled","catenaryColor","brushRadius","brushColor","lazyRadius","canvasWidth","canvasHeight","hideGrid","immediateLoading","loadTimeOffset","Global","createGlobalStyle","Root","p","InfoBox","StatsBox","CenterBox","Center","MyThreeColumns","Circle","Divider","hr","Layout","info","center","stats","left","right","done","rotateOnDone","useSpring","config","friction","clamp","from","opacity","transform","transformOrigin","to","style","SelfCenter","ParticleTemplate","hit","Tooltip","Details","span","Particle","y","props","content","Timer","durationSecGiven","durationSec","onDone","paused","started","setStarted","setCurrent","setDone","pausedAtDifference","setPausedAtDifference","durationSecOwn","setDurationSecOwn","now","Date","timeLeft","differenceInSeconds","useInterval","difference","useImperativeHandle","start","finish","forwardRef","storageGet","defaultValue","got","localStorage","parse","storageSet","setItem","BrowserStorage","allCards","this","point","_getLastPoint","_setLastPoint","_getCardDeltas","getCardPoints","Deck","cards","length","shift","Player","sessionDeck","zeroDeck","hasMore","takeNextCard","Session","storage","getAllCards","cardPoints","getNewPoint","zeroCards","filter","sessionCards","result","Object","entries","sortBy","getReadyCardIds","find","getDecks","player","card","lastCard","recordPoint","delta","getDelta","recordDelta","sessionSingleton","getSession","useDrawing","setEditing","toggleEditing","DURATION","INFO","A_LETTER","NO_INPUT","Typing","good","setGood","bad","setBad","setInput","particles","setParticles","setCard","isChecking","setChecking","isHit","setHit","nextWord","moreParticles","times","angle","random","Math","PI","distance","dx","cos","dy","sin","particle","push","concat","startGame","timerRef","ctrlKey","ignore","trim","sample","re","RegExp","escapeRegExp","expectedWord","withNoSS","replace","versions","addMore","match","matches","recordHit","recordMiss","substring","test","last","beforeLast","use","letter","slice","applyUmlauts","setFinished","targetColor","color","padding","hideOnDone","xs","setter","links","index","source","target","simulation","forceSimulation","force","forceLink","forceCollide","forceCenter","tick","animateParticles","animation","App","questions","shuffle","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"wotaAEIA,EAAMC,wBAAc,MACpBC,EAAMD,wBAAc,cAEjB,SAASE,IACd,OAAOC,qBAAWJ,GAMb,SAASK,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SAAY,EACpBC,mBAAS,MADW,mBACvCC,EADuC,KAChCC,EADgC,KAG5C,OAAO,kBAACT,EAAIU,SAAL,CAAcC,MAAOH,GAC1B,kBAACN,EAAIQ,SAAL,CAAcC,MAAOF,GACjBH,I,sSCdR,IAAIM,EAAeC,IAAOC,IAAV,KAGZC,EAAaF,IAAOC,IAAV,KAGVE,EAAaH,IAAOC,IAAV,KAIP,SAASG,EAAT,GAA2C,IAC5CC,EADuBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UAMlC,OAJkB,OAAdA,IAAoBF,EAAUN,IAChB,IAAdQ,IAAoBF,EAAUH,IAChB,IAAdK,IAAqBF,EAAUF,GAE5B,kBAACE,EAAD,KAAUC,G,YCfZ,SAASE,EAAQC,EAAQD,GAC9B,IAAIE,EAAkB,IAAXD,EAAe,OAAS,OACnC,OAAO,0BAAME,UAAWD,GAAOF,GAW1B,SAASI,EAAaC,GAC3BC,oBAAU,WAER,OADAC,SAASC,iBAAiB,UAAWH,GAC9B,WACLE,SAASE,oBAAoB,UAAWJ,M,8qBClB9C,IAAIK,EAAqBlB,IAAOmB,GAAV,KAQlBC,EAAapB,IAAOqB,GAAV,KAGVC,EAAetB,IAAOqB,GAAV,KAoBZE,EAASvB,IAAOC,IAAV,KAGNuB,EAASxB,IAAOC,IAAV,KAGNwB,EAASzB,IAAOC,IAAV,KAGNyB,EAAU1B,IAAOC,IAAV,KAoBI0B,MA5CD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACZ,kBAACV,EAAD,KACGU,EAAQC,IAAI,SAACC,EAAGC,GACf,IACIC,EAsBV,SAAqBF,GACnB,IAAIG,EAAiB,MAAbH,EAAEI,OACNC,EAAiB,MAAbL,EAAEI,OACNE,EAAiB,MAAbN,EAAEI,OAENG,EAAS,GACTJ,IAAGI,EAAS,QACZF,IAAGE,EAAS,QACZD,IAAGC,EAAS,QAEhB,IAAIhC,EAAUqB,EACVO,IAAG5B,EAAUkB,GACbY,IAAG9B,EAAUmB,GACbY,IAAG/B,EAAUoB,GAEjB,OAAO,kBAACpB,EAAD,eAAagC,GAAb,OAAsBP,EAAEQ,OArChBC,CAAWT,GAMtB,OALIA,EAAEU,EACG,kBAAClB,EAAD,CAAcmB,IAAKV,GAAIC,GAEvB,kBAACZ,EAAD,CAAYqB,IAAKV,GAAIC,O,mmBCzBpC,IAAMU,EAAK,I,MAAIC,GAAM,oBACrBD,EAAGE,QAAQ,GAAGC,OAAO,CAAEC,SAAU,0BACjC,IAAIC,EAAQL,EAAGI,S,2CAER,WAAoBE,EAAUC,GAA9B,SAAAC,EAAA,8EACER,EAAGS,YAAY,KAAMJ,EAArB,qBAA4B,gCAAAG,EAAA,qEAChBE,GAAQJ,GADQ,UAC7BK,EAD6B,OAE7BC,EAAU,CAAEN,WAAUC,YACtBI,EAH6B,uBAIzBE,EAAOF,EAAPE,GAJyB,kBAKxBR,EAAMS,IAAN,GAAYD,MAAOD,KALK,gCAOxBP,EAAMU,IAAIH,IAPc,4CAD9B,0C,sBAyBA,SAAeI,EAAtB,mC,6CAAO,WAAoBV,GAApB,eAAAE,EAAA,qEACYE,GAAQJ,GADpB,YACDK,EADC,iDAGIA,EAAKJ,SAHT,gCAKI,MALJ,0C,sBASA,SAASG,GAAQJ,GACtB,OAAOD,EACJY,MAAM,YACNC,OAAOZ,GACPa,Q,2RCnCL,IAAMC,GAAiB,OACjBC,GAAc,OACdC,GAAc,EACdC,GAAa,EAEfC,GAAWlE,IAAOC,IAAV,MAQRkE,GAAcnE,IAAOC,IAAV,MAOXmE,GAAW,SAACpB,EAAUqB,IDvBnB,SAAP,6BC0BEvB,CAAcE,EAFHqB,EAAMC,gBAKbC,GAAUC,KAAKC,UAAU,CAC7BC,MAAO,GACPC,MAAO,GACPC,OAAQ,KAoDKC,OAhDf,YAAmD,IAA/B7B,EAA8B,EAA9BA,SAAmB8B,EAAW,EAApB7B,QAM5BrC,EALA,SAAyBmE,GACT,WAAVA,EAAEtC,KACAqC,GAASE,EAAUC,QAAQC,SAKnCpE,oBAAU,WAAM,2CACd,4BAAAoC,EAAA,qEACmBJ,EAAcE,GADjC,QACMmC,EADN,QAIIH,EAAUC,SAAWD,EAAUC,QAAQG,aAAaD,GAEpDH,EAAUC,SAAWD,EAAUC,QAAQG,aAAab,IANxD,0CADc,uBAAC,WAAD,wBAUdc,IACC,CAACrC,IAEJ,IAAIgC,EAAYM,mBArBgC,EAuB7BC,cAAXC,EAvBwC,EAuBxCA,GAAIC,EAvBoC,EAuBpCA,GAERC,EAAWpG,IAEf,OAAO,kBAAC4E,GAAD,KACHwB,EAAW,KACb,kBAAC,IAAD,CACEC,IAAKX,EACLZ,SAAU,SAAAtC,GAAC,OAAIsC,GAASpB,EAAUlB,IAClC8D,UAAWd,EACXe,cAAe/B,GACfgC,YAAa9B,GACb+B,WAAYhC,GACZiC,WAAY/B,GACZgC,YAAaT,EACbU,aAAcT,EACdU,UAAU,EACVC,kBAAkB,EAClBC,eAAgB,IAGhBvB,GAAW,kBAACX,GAAD,uB,4sDChFjB,IAAImC,GAASC,YAAH,MAmBNC,GAAOxG,IAAOC,IAAV,KAIJ,SAAAwG,GAAC,OAAIA,EAAEf,SAAW,GAAK,0BAGvBgB,GAAU1G,IAAOC,IAAV,MASP0G,GAAW3G,IAAOC,IAAV,MASR2G,GAAY5G,IAAOC,IAAV,MAST4G,GAAS7G,IAAOC,IAAV,MAeN6G,GAAiB9G,IAAOC,IAAV,KAHR,GACG,OAoBT8G,GAAS/G,IAAOC,IAAV,KAvBS,GACD,MA4BI,SAAAwG,GAAC,OACH,OAAhBA,EAAElG,UAlCqB,QAoCH,IAAhBkG,EAAElG,UAnCsB,OACF,SAqD1ByG,GAAUhH,IAAOiH,GAAV,MAgEIC,OAxDf,YAAyE,IAAtD3G,EAAqD,EAArDA,UAAW4G,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAC1DC,EAAeC,YAAU,CAC3BC,OAAQ,CACNC,SAAU,EACVC,MAAO,GAETC,KAAM,CACJnD,MAAO,OACPoD,QAAS,EACTC,UAAW,wBACXC,gBAAiB,UAEnBC,GAAKV,EAED,CACE,CACEO,QAAS,GACTC,UAAW,6BAEb,CACED,QAAS,EACTC,UAAW,0BARf,KAaFtC,EAAWpG,IAEf,OACE,kBAACkH,GAAD,CAAMd,SAAUA,GACd,kBAACY,GAAD,MACA,kBAACM,GAAD,KACE,kBAACC,GAAD,KAASO,IAEX,kBAAC,IAASnH,IAAV,CAAckI,MAAOV,GACnB,kBAACX,GAAD,KACE,6BAAMQ,GACN,kBAACP,GAAD,CAAQxG,UAAWA,IACnB,6BAAMgH,KAGRJ,EACA,kBAACT,GAAD,KACE,4BACGS,EAAKtF,IAAI,SAACC,EAAGC,GAAJ,MACF,QAAND,EAAc,kBAACkF,GAAD,CAASvE,IAAKV,IAC5B,wBAAIU,IAAKV,GAAID,OALZ,KAUT,kBAAC6E,GAAD,KAAWU,K,6tBC5KjB,IAAIe,GAAapI,IAAOC,IAAV,MAGVoI,GAAmBrI,IAAOC,IAAV,MAMhBI,GAAUL,IAAOC,IAAV,KACU,SAAAwG,GAAC,OAAKA,EAAEe,KAAO,OAASf,EAAE6B,IAAM,OAAS,gBACnD,SAAA7B,GAAC,OACRA,EAAEe,KAAQf,EAAE6B,ID+CgB,OACF,OChDiC,SAG3DC,GAAUvI,IAAOC,IAAV,MAaPuI,GAAUxI,IAAOyI,KAAV,MAwCIC,OAhCf,YAAkE,IAA7C5G,EAA4C,EAA5CA,EAAG6G,EAAyC,EAAzCA,EAAaL,GAA4B,EAAtC7I,SAAsC,EAA5B6I,KAAKhG,EAAuB,EAAvBA,KAAMkF,EAAiB,EAAjBA,KAAM5F,EAAW,EAAXA,QAChDgH,EAAQlB,YAAU,CACpBM,UAAU,aAAD,OAAelG,EAAf,eAAuB6G,EAAvB,OACTb,KAAM,CACJE,UAAU,aAAD,OAAelG,EAAf,eAAuB6G,EAAvB,UAGTE,EAAWrB,EAGb,kBAACe,GAAD,KACGjG,EACD,kBAACkG,GAAD,KACE,kBAAC,EAAD,CAAS5G,QAASA,MALtBU,EASF,OACE,kBAAC+F,GAAD,KACE,kBAAC,IAASpI,IAAV,CAAckI,MAAOS,GACnB,kBAACR,GAAD,KACE,kBAAC,GAAD,CAASZ,KAAMA,EAAMc,IAAKA,GACvBO,O,kBC3DTC,GAAQ,WAAoDnD,GAAS,IAA7CoD,EAA4C,EAAzDC,YAA+BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,OAAkB,EAC1CxJ,mBAAS,MADiC,mBACjEyJ,EADiE,KACxDC,EADwD,OAE1C1J,mBAAS,MAFiC,mBAEjEuF,EAFiE,KAExDoE,EAFwD,OAGhD3J,oBAAS,GAHuC,mBAGjE8H,EAHiE,KAG3D8B,EAH2D,OAIpB5J,mBAAS,MAJW,mBAIjE6J,EAJiE,KAI7CC,EAJ6C,OAK5B9J,mBAAS,MALmB,mBAKjE+J,EALiE,KAKjDC,EALiD,KAOlEV,EAAcS,GAAkBV,EAEpCjI,oBAAU,WACR,IAAI6I,EAAM,IAAIC,KACd,GAAIV,EAAQ,CACV,IAAIW,EAAWb,EAAcc,aAAoBH,EAAKR,GACtDK,EAAsBK,QAGlBN,IACFH,EAAWO,GACXD,EAAkBH,KAIrB,CAACL,IAEJa,aAAY,WACV,IAAIvC,IACA0B,GAECC,EAAL,CAEA,IAAIQ,EAAM,IAAIC,KACVI,EAAaF,aAAoBH,EAAKR,GACtCa,IAAe/E,GAASoE,EAAWW,GACxBhB,EAAc/D,GACb,IACdgE,IACAK,GAAQ,MAtCO,KA0CnBW,8BAAoBtE,EAAK,iBAAO,CAC9BuE,MAAO,WACAf,GAASC,EAAW,IAAIQ,OAE/BO,OAAQ,WACD3C,IACHyB,IACAK,GAAQ,QAMd,IAAIO,EAAWb,EAAc/D,EAE7B,OAAO,6BAAM4E,EAAN,UAIMf,GAFfA,GAAQsB,qBAAWtB,I,gBC3DnB,SAASuB,GAAW5H,EAAK6H,GACvB,IAAIC,EAAMC,aAAapH,QAAQX,GAC/B,OAAI8H,EAAY/F,KAAKiG,MAAMF,GACpBD,EAET,SAASI,GAAWjI,EAAK3C,GACvBA,EAAQ0E,KAAKC,UAAU3E,GACvB0K,aAAaG,QAAQlI,EAAK3C,G,IAkDb8K,G,WA9Cb,WAAYC,GAAW,qBACrBC,KAAKD,SAAWA,E,2DAIhB,OAAOC,KAAKD,W,sCAIZ,OAAOR,GAxBa,kBAwBe,M,sCAInC,OAAOA,GA1BY,iBA0Be,K,oCAEtBvK,GACZ4K,GA7BmB,iBA6BQ5K,K,oCAI3B,IAAIiL,EAAQD,KAAKE,gBAAkB,EAEnC,OADAF,KAAKG,cAAcF,GACZA,I,uCAIP,OAAOV,GAxCa,kBAwCe,M,+BAG5B9G,GACP,OAAOuH,KAAKI,iBAAiB3H,IAAO,I,kCAG1BA,EAAIzD,GACd,IAAIqF,EAAO2F,KAAKI,iBAChB/F,EAAK5B,GAAMzD,EACX4K,GAlDoB,kBAkDQvF,K,kCAGlB5B,EAAIzD,GACd,IAAIqF,EAAO2F,KAAKK,gBAChBhG,EAAK5B,GAAMzD,EACX4K,GAzDoB,kBAyDQvF,O,KC7CjBiG,G,WAXb,WAAYC,GAAQ,qBAClBP,KAAKO,MAAQA,E,uDAGb,QAASP,KAAKO,MAAMC,S,qCAGpB,OAAOR,KAAKO,MAAME,Y,KCMPC,G,WAbb,WAAYC,EAAaC,GAAW,qBAClCZ,KAAKW,YAAcA,EACnBX,KAAKY,SAAWA,E,4DAGhB,OAAIZ,KAAKW,YAAYE,UACZb,KAAKW,YAAYG,eAEjBd,KAAKY,SAASE,mB,KCiEZC,O,WArEb,WAAYC,GAAU,qBACpBhB,KAAKgB,QAAUA,EAEf,IAAIjB,EAAWC,KAAKgB,QAAQC,cACxBC,EAAalB,KAAKgB,QAAQX,gBAC1BJ,EAAQD,KAAKgB,QAAQG,cACzBnB,KAAKC,MAAQA,EANM,MA2CvB,SAAkBF,EAAUmB,EAAYjB,GACtC,IAAImB,EAAYrB,EAASsB,OAAO,SAAArK,GAAC,OAAKkK,EAAWlK,EAAEyB,MAC/CmI,EAAW,IAAIN,GAAKc,GAGpBE,EAYN,SAAyBJ,EAAYjB,GACnC,IAAIsB,EAASC,OAAOC,QAAQP,GACzBG,OAAO,qDACOpB,IAGjB,OADAsB,EAASG,iBAAOH,EAAQ,SAAAvK,GAAC,OAAIA,EAAE,MACjBD,IAAI,mCAAE0B,EAAF,iBAAkBA,IAnBrBkJ,CAAgBT,EAAYjB,GACflJ,IAAI,SAAA0B,GAAE,OAEhCsH,EAAS6B,KAAK,SAAA5K,GAAC,OAAIA,EAAEyB,IAAMA,MAEzBkI,EAAc,IAAIL,GAAKgB,GAE3B,MAAO,CACLV,WACAD,eA7CIkB,CAAS9B,EAAUmB,EAAYjB,GAFjCW,EATiB,EASjBA,SACAD,EAViB,EAUjBA,YAGEmB,EAAS,IAAIpB,GAAOC,EAAaC,GACrCZ,KAAK8B,OAASA,E,4DAId,IAAIC,EAAO/B,KAAK8B,OAAOhB,eAGvB,OAFAd,KAAKgC,SAAWD,EAChB/B,KAAKgB,QAAQiB,YAAYF,EAAKtJ,GAAIuH,KAAKC,OAChC8B,I,kCAMP,IAAItJ,EAAKuH,KAAKgC,SAASvJ,GACnByJ,EAAQlC,KAAKgB,QAAQmB,SAAS1J,GAAM,EACpCwH,EAAQD,KAAKC,MAAQiC,EACzBlC,KAAKgB,QAAQoB,YAAY3J,EAAIyJ,GAC7BlC,KAAKgB,QAAQiB,YAAYxJ,EAAIwH,K,mCAI7B,IAAIxH,EAAKuH,KAAKgC,SAASvJ,GAEnBwH,EAAQD,KAAKC,MADL,EAEZD,KAAKgB,QAAQoB,YAAY3J,EAFb,GAGZuH,KAAKgB,QAAQiB,YAAYxJ,EAAIwH,O,KCzC7BoC,GAAmB,KASRC,OAPf,SAAoBvC,GAClB,GAAIsC,GAAkB,OAAOA,GAC7B,IAAIrB,EAAU,IAAIlB,GAAeC,GAEjC,OADAsC,GAAmB,IAAItB,GAAQC,ICSlBuB,OAdf,WAAuB,IAAD,EACQ3N,oBAAS,GADjB,mBACfoF,EADe,KACNwI,EADM,KAEhBC,EAAgB,kBAAMD,GAAYxI,IAStC,OAFAlE,EALA,SAAyBmE,GACT,WAAVA,EAAEtC,KACJ8K,MAKG,CAACzI,EAASwI,ICCfE,GAAW,GAEXC,GAAO,CACT,mDACA,mCACA,MACA,kEACA,oDACA,4CACA,MACA,gDACA,4BACA,MACA,kDACA,2CACA,uDACA,sEAGEC,GAAW,MAwNf,IAAIC,GAAW,CAAC,OAKDC,OApMf,WAAoB,IAAD,EACWlO,oBAAS,GADpB,mBACZyJ,EADY,KACHC,EADG,OAEK1J,oBAAS,GAFd,mBAEZ8H,EAFY,KAEN8B,EAFM,OAGK5J,mBAAS,GAHd,mBAGZmO,EAHY,KAGNC,EAHM,OAIGpO,mBAAS,GAJZ,mBAIZqO,EAJY,KAIPC,EAJO,OAMOtO,mBAAS,IANhB,mBAMZY,EANY,KAML2N,EANK,OAOevO,mBAAS,IAPxB,mBAOZwO,EAPY,KAODC,EAPC,OASKzO,mBAAS,MATd,mBASZmN,EATY,KASNuB,EATM,MAUjBvB,EAAOO,KAAaN,WAElBsB,EAAQhB,KAAaN,UAEvB,IAAI9J,EAAW6J,GAAc,CAAE7J,SAAU,GAAIpB,QAAS,IAdrC,EAgBelC,oBAAS,GAhBxB,mBAgBZ2O,EAhBY,KAgBAC,EAhBA,OAiBK5O,oBAAS,GAjBd,mBAiBZ6O,EAjBY,KAiBLC,EAjBK,KAmBbC,EAAW,WACb,IAAIC,EAAgB,GACpBC,gBAAM,EAAG,WAAO,IAAD,EbvEZ,WACL,IAAIC,EAAQC,iBAAO,EAAa,EAAVC,KAAKC,IAAQ,GAC/BC,EAAWH,iBAAO,IAAK,KAG3B,MAAO,CAAEI,GAFAD,EAAWF,KAAKI,IAAIN,GAEhBO,GADJH,EAAWF,KAAKM,IAAIR,IaoERI,GAAXC,EADO,EACPA,GAAIE,EADG,EACHA,GACNE,EAAW,CACb/O,QACAgC,KAAMU,EAASA,SACfpB,QAASoB,EAASpB,QAClBE,EAAGmN,EACHtG,EAAGwG,EACH7G,IAAKiG,GAGPG,EAAcY,KAAKD,KAGrBlB,EAAaD,EAAUqB,OAAOb,IAC9BN,EAAQhB,KAAaxB,gBACrBqC,EAAS,KAGPuB,EAAY,WACdC,EAASxK,QAAQiF,QACjBd,GAAW,IAgDbxI,EA7CA,SAAyBmE,GACvB,IAAIyC,IACAzC,EAAE2K,QAAN,CAEA,IAAIC,EAAStB,EAEb,GAAc,WAAVtJ,EAAEtC,IACJgN,EAASxK,QAAQkF,cACZ,GAAc,UAAVpF,EAAEtC,IAGX,GAFA+M,IAEInB,EACFC,GAAY,GACZG,QACK,EACLnO,EAAQA,EAAMsP,UAEZtP,EAmIDuP,iBAAOlC,IAlINM,EAAS3N,IAGX,IAAIgI,EAzFZ,SAAkBhG,EAAMV,GACtB,IAAIkO,EAAK,IAAIC,OAAJ,YAAgBC,uBAAa1N,GAA7B,OAmBT,QAjBaV,EAAQ8K,KAAK,SAAA5K,GACxB,IAAImO,EAAenO,EAAEQ,KACjB4N,EAAWD,EAAaE,QAAQ,QAAM,MAEtCC,EAAW,CAACH,EAAcC,GAE1BG,EAAU,SAAAlO,GACZ,IAAIoI,EAAM6F,EAASvO,IAAIM,GACvBiO,EAASd,KAAT,MAAAc,EAAQ,YAAS7F,KAOnB,MAJiB,MAAbzI,EAAEI,QAAgBmO,EAAQ,SAAAvO,GAAC,oBAAWA,KACzB,MAAbA,EAAEI,QAAgBmO,EAAQ,SAAAvO,GAAC,oBAAWA,KACzB,MAAbA,EAAEI,QAAgBmO,EAAQ,SAAAvO,GAAC,oBAAWA,KAEnCsO,EAAS1D,KAAK,SAAA5K,GAAC,OAAIA,IAAMQ,GAAQR,EAAEwO,MAAMR,OAuElCS,CAAQjQ,EAAO0C,EAASpB,SAE9B0G,GACFwF,EAAQD,EAAO,GACfT,KAAaoD,cAEbxC,EAAOD,EAAM,GACbX,KAAaqD,cAGfjC,EAAOlG,GACPgG,GAAY,QAET,GAAc,cAAVvJ,EAAEtC,IAAqB,CAChC,GAAIkN,EAAQ,OACZ1B,EAAS3N,EAAMoQ,UAAU,EAAGpQ,EAAMgL,OAAS,SACtC,GAAIoC,GAASiD,KAAK5L,EAAEtC,KAAM,CAC/B,GAAIkN,EAAQ,OACZH,IACAlP,GAASyE,EAAEtC,IACXwL,EAsFN,SAAuBjM,GACrB,GAAIA,EAAKsJ,OAAS,EAAG,OAAOtJ,EAC5B,IAAI4O,EAAO5O,EAAKA,EAAKsJ,OAAS,GAC1BuF,EAAa7O,EAAKA,EAAKsJ,OAAS,GAEpC,GAAa,MAATsF,GAAyB,MAATA,EAAc,OAAO5O,EAEzC,IAAI8O,EAAM,SAAAC,GAAM,OAAI/O,EAAKgP,MAAM,EAAGhP,EAAKsJ,OAAS,GAAKyF,GAErD,MAAmB,MAAfF,EAA2BC,EAAI,QAChB,MAAfD,EAA2BC,EAAI,QAChB,MAAfD,EAA2BC,EAAI,QAChB,MAAfD,EAA2BC,EAAI,QAChB,MAAfD,EAA2BC,EAAI,QAChB,MAAfD,EAA2BC,EAAI,QAE5B9O,EAtGMiP,CAAa3Q,QAM1B,IAAImP,EAAWnK,mBAEX4L,EfhJG3R,qBAAWF,GekDD,EAuGWgO,KAvGX,oBAuGZpK,GAvGY,MAyGbkO,IAzGa,MAyGC3J,EAAO,OAAS,QAC9BoB,GAAQlB,YAAU,CACpB0J,MAAOD,GACPE,QAAS7J,EAAO,GAAK,EACrBM,KAAM,CACJsJ,MAAO,OACPC,QAAS,KAGTC,GAAa5J,YAAU,CAAEK,QAASP,EAAO,EAAI,EAAGM,KAAM,CAAEC,QAAS,KAEjExH,GAAY8N,EAAaE,EAAQ,KACrC,OACE,oCACE,kBAAC,GAAD,CACEvL,SAAUA,EAASA,SACnBC,QAASA,KAEb,kBAAC,GAAD,CACEuE,KAAMA,EACNjH,UAAWA,GACX4G,KAAMgC,EAAU,KAAOsE,GACvBrG,OAAQ8G,EAAUrM,IAAI,SAACC,EAAGC,GAAJ,OACpB,kBAAC,GAAD,CACEH,QAASE,EAAEF,QACXE,EAAGA,EAAEA,EACL6G,EAAG7G,EAAE6G,EACLL,IAAKxG,EAAEwG,IACPhG,KAAMR,EAAEQ,KACRG,IAAKV,EACLyF,KAAMA,MAGVF,KAAMtE,EAASA,SACfuE,MACE,oCACE,kBAACnH,EAAD,CAAWE,MAAOA,EAAOC,UAAWA,KAClC8N,EACA,6BACE,kBAAC,EAAD,CAASzM,QAASoB,EAASpB,WAFhB,MAOnByF,MACE,kBAAC,IAASpH,IAAV,CAAckI,MAAOS,IACnB,kBAAC,IAAS3I,IAAV,CAAckI,MAAOmJ,IACnB,kBAAC,GAAD,CACE3L,IAAK8J,EACLzG,YAAawE,GACbvE,OA3DE,WACZiI,GAAY,GACZ5H,GAAQ,GbnIL,SAA2BiI,EAAIC,GACpC,IAAIC,EAAQ,GACRC,EAAQ,EACZ/C,gBAAM4C,EAAGjG,OAAQ,SAAAxJ,GACf6M,gBAAM4C,EAAGjG,OAAQ,SAAA3C,GACf8I,EAAMnC,KAAK,CAAEqC,OAAQ7P,EAAG8P,OAAQjJ,EAAG+I,UACnCA,GAAS,MAGb,IAAIG,EAAaC,YAAgBP,GAC9BQ,MAAM,QAASC,YAAUP,IACzBM,MAAM,UAAWE,YAAa,MAC9BF,MAAM,SAAUG,eAEnB,OAAO,WACLL,EAAWM,KAAK,KAChBZ,EAAE,YAAOA,GACTC,EAAOD,IamHSa,CAAiBlE,EAAWC,EAC5CkE,IAwDUnJ,OAAQjG,MAGZ,6BACG4K,EADH,OACarN,EAAOqN,EAAM,MAE1B,6BACGE,EADH,QACavN,EAAOuN,EAAK,Y,SCxMpBuE,OAdf,WACE,IAAIf,EAAKgB,GAMT,OAFAhB,EAAKiB,kBAAQjB,GACbnE,GAAWmE,GAAI3F,eAEb,kBAACpM,EAAD,KACE,kBAAC,GAAD,CAAQ+S,UAAWhB,MCLnBkB,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvC,MACvB,2DAsCN,SAASwC,GAAiBC,EAAOpL,GAC/BqL,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3T,QACfqT,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEhM,GAAUA,EAAOiM,UACnBjM,EAAOiM,SAASR,KAMlBM,QAAQC,IAAI,sCAGRhM,GAAUA,EAAOkM,WACnBlM,EAAOkM,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC3FjEC,IAASC,OAAO,kBAAC,GAAD,MAASlT,SAASmT,eAAe,SDiB1C,SAAmBvM,GACxB,GAA6C,kBAAmBqL,UAAW,CAGzE,GADkB,IAAImB,IAAIC,gBAAwBzB,OAAOC,SAASyB,MACpDC,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO3R,iBAAiB,OAAQ,WAC9B,IAAM+R,EAAK,UAAMqB,gBAAN,sBAEP3B,KAgEV,SAAkCM,EAAOpL,GAEvC4M,MAAMxB,GACHI,KAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAM3B,KAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,KAAK,WAC7BR,OAAOC,SAASoC,aAKpBlC,GAAgBC,EAAOpL,KAG1BmM,MAAM,WACLJ,QAAQC,IACN,mEArFAsB,CAAwBlC,EAAOpL,GAI/BqL,UAAUC,cAAc6B,MAAM3B,KAAK,WACjCO,QAAQC,IACN,gHAMJb,GAAgBC,EAAOpL,MCxC/BsL,K","file":"static/js/main.3dff565b.chunk.js","sourcesContent":["import React, { useState, useContext, createContext } from 'react'\n\nlet Get = createContext(null)\nlet Set = createContext(() => {})\n\nexport function useGetFinished() {\n  return useContext(Get)\n}\nexport function useSetFinished() {\n  return useContext(Set)\n}\n\nexport function ProvideFinished({ children }) {\n  let [state, setState] = useState(null)\n\n  return <Get.Provider value={state}>\n    <Set.Provider value={setState}>\n      { children }\n    </Set.Provider>\n  </Get.Provider>\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nlet DefaultStyle = styled.div`\n  color: #06c;\n`\nlet RightStyle = styled.div`\n  color: #0c6;\n`\nlet WrongStyle = styled.div`\n  color: #c66;\n`\n\nexport function JustInput ({ input, rightness }) {\n  let Wrapper\n  if (rightness === null) Wrapper = DefaultStyle\n  if (rightness === true) Wrapper = RightStyle\n  if (rightness === false) Wrapper = WrongStyle\n\n  return <Wrapper>{input}</Wrapper>\n}\n","import { forceCenter, forceCollide, forceLink, forceSimulation } from 'd3-force'\nimport { random, times } from 'lodash'\nimport React, { useEffect } from 'react'\n\nexport function ending (number, ending) {\n  let hide = number === 1 ? 'hide' : 'show'\n  return <span className={hide}>{ending}</span>\n}\n\nexport function distance () {\n  let angle = random(0, Math.PI * 2, true)\n  let distance = random(400, 500)\n  let dx = distance * Math.cos(angle)\n  let dy = distance * Math.sin(angle)\n  return { dx, dy }\n}\n\nexport function useKeyboard (handleKeyboard) {\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboard)\n    return () => {\n      document.removeEventListener('keydown', handleKeyboard)\n    }\n  })\n}\n\nexport function animateParticles (xs, setter) {\n  let links = []\n  let index = 0\n  times(xs.length, x => {\n    times(xs.length, y => {\n      links.push({ source: x, target: y, index })\n      index += 1\n    })\n  })\n  let simulation = forceSimulation(xs)\n    .force('links', forceLink(links))\n    .force('collide', forceCollide(100))\n    .force('center', forceCenter())\n\n  return () => {\n    simulation.tick(100)\n    xs = [...xs]\n    setter(xs)\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nlet AnswerListTemplate = styled.ul`\n  list-style: none;\n  font-size: 50%;\n  color: #888;\n  max-height: 50vh;\n  overflow-y: auto;\n`\n\nlet NormalItem = styled.li`\n`\n\nlet LessUsedItem = styled.li`\n  opacity: 0.5;\n  font-size: 50%;\n`\n\nlet Answers = ({ answers }) => (\n  <AnswerListTemplate>\n    {answers.map((x, i) => {\n      let item = null\n      let text = withGender(x)\n      if (x.l) {\n        item = <LessUsedItem key={i}>{text}</LessUsedItem>\n      } else {\n        item = <NormalItem key={i}>{text}</NormalItem>\n      }\n      return item\n    })}\n  </AnswerListTemplate>\n)\n\nlet MStyle = styled.div`\n  // color: #66f;\n`\nlet FStyle = styled.div`\n  // color: #f66;\n`\nlet NStyle = styled.div`\n  // color: #666;\n`\nlet NoStyle = styled.div``\n\nfunction withGender (x) {\n  let m = x.gender === 'm'\n  let f = x.gender === 'f'\n  let n = x.gender === 'n'\n\n  let prefix = ''\n  if (m) prefix = 'der '\n  if (f) prefix = 'die '\n  if (n) prefix = 'das '\n\n  let Wrapper = NoStyle\n  if (m) Wrapper = MStyle\n  if (f) Wrapper = FStyle\n  if (n) Wrapper = NStyle\n\n  return <Wrapper>{`${prefix}${x.word}`}</Wrapper>\n}\n\nexport default Answers\n","import Dexie from 'dexie';\n\nconst db = new Dexie('DrawingsDatabase')\ndb.version(1).stores({ drawings: \"++id,question,drawing\" });\nlet table = db.drawings\n\nexport async function save(question, drawing) {\n  return db.transaction('rw', table, async () => {\n    let item = await getItem(question)\n    let newItem = { question, drawing }\n    if (item) {\n      let { id } = item\n      return table.put({ id, ...newItem })\n    } else {\n      return table.add(newItem)\n    }\n  })\n}\n\nexport function remove(question) {\n  return db.transaction('rw', table, async () => {\n    let item = await getItem(question)\n    if (item) {\n      let { id } = item\n      return table.delete(id)\n    } else {\n      return\n    }\n  })\n}\n\nexport async function load(question) {\n  let item = await getItem(question)\n  if (item) {\n    return item.drawing\n  } else {\n    return null\n  }\n}\n\nexport function getItem(question) {\n  return table\n    .where('question')\n    .equals(question)\n    .first()\n}\n","import { useViewport } from 'react-viewport-hooks'\nimport CanvasDraw from 'react-canvas-draw'\nimport React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components'\n\nimport { useGetFinished } from './hooks/useFinished';\nimport { useKeyboard } from './utility'\nimport * as drawings from './state/drawings'\n\nconst CATENARY_COLOR = '#fff'\nconst BRUSH_COLOR = '#000'\nconst BRUSH_RADUS = 3\nconst LAZY_RADUS = 1\n\nlet Template = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n`\n\nlet EditingFlag = styled.div`\n  position: fixed;\n  right: 0;\n  top: 0;\n  color: red;\n`\n\nlet onChange = (question, given) => {\n  let data = given.getSaveData()\n  // data = JSON.stringify(data)\n  drawings.save(question, data);\n}\n\nconst NO_DATA = JSON.stringify({\n  lines: [],\n  width: 10,\n  height: 10,\n})\n\n// non-ideal to pass it there but so what\nfunction Drawable({ question, drawing: editing }) {\n  function handleKeyboard (e) {\n    if (e.key === 'Delete') {\n      if (editing) canvasRef.current.undo()\n    }\n  }\n  useKeyboard(handleKeyboard)\n\n  useEffect(() => {\n    async function fetchData() {\n      let data = await drawings.load(question)\n      if (data) {\n        // data = JSON.parse(data)\n        canvasRef.current && canvasRef.current.loadSaveData(data)\n      } else {\n        canvasRef.current && canvasRef.current.loadSaveData(NO_DATA)\n      }\n    }\n    fetchData()\n  }, [question])\n\n  let canvasRef = useRef()\n\n  const { vw, vh } = useViewport()\n\n  let finished = useGetFinished()\n\n  return <Template>\n    { finished ? null :\n    <CanvasDraw\n      ref={canvasRef}\n      onChange={x => onChange(question, x)}\n      disabled={!editing}\n      catenaryColor={CATENARY_COLOR}\n      brushRadius={BRUSH_RADUS}\n      brushColor={BRUSH_COLOR}\n      lazyRadius={LAZY_RADUS}\n      canvasWidth={vw}\n      canvasHeight={vh}\n      hideGrid={true}\n      immediateLoading={true}\n      loadTimeOffset={0}\n    />\n    }\n    { editing && <EditingFlag>Drawing mode</EditingFlag> }\n  </Template>\n}\n\nexport default Drawable\n","import { useSpring, animated } from 'react-spring'\nimport React from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nimport { useGetFinished } from './hooks/useFinished';\n\nlet Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  html, body, #root, #root > div {\n    height: 100%;\n  }\n  .show, .hide {\n    transition: opacity 0.3s;\n  }\n  .show {\n    opacity: 1;\n  }\n  .hide {\n    opacity: 0;\n  }\n`\n\nlet Root = styled.div`\n  font-size: 48pt;\n  display: flex;\n  overflow: hidden;\n  ${p => p.finished ? '' : 'pointer-events: none;'}\n`\n\nlet InfoBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet StatsBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  right: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet CenterBox = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`\n\nlet Center = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n`\n\nlet CENTER_COLOR_DEFAULT = '#06c'\nexport let CENTER_COLOR_GREEN = '#0c6'\nexport let CENTER_COLOR_RED = '#c66'\n\nlet CENTER_DELTA = 38\nlet CENTER_SIZE = 10\nlet TOP = 30\nlet MIDDLE = 20\n\nlet MyThreeColumns = styled.div`\n  width: 100%;\n  display: flex;\n  > div {\n    top: ${TOP}%;\n    position: absolute;\n  }\n  > div:nth-child(1) {\n    right: calc(50% + ${MIDDLE}px);\n  }\n  > div:nth-child(2) {\n    // Circle below\n  }\n  > div:nth-child(3) {\n    left: calc(50% + ${MIDDLE}px);\n  }\n`\n\nlet Circle = styled.div`\n  left: 50%;\n  transform: translateY(${CENTER_DELTA}px) translateX(-50%);\n  height: ${CENTER_SIZE}px;\n  width: ${CENTER_SIZE}px;\n  border-radius: 50%;\n  background-color: ${p =>\n    p.rightness === null\n      ? CENTER_COLOR_DEFAULT\n      : p.rightness === true\n      ? CENTER_COLOR_GREEN\n      : CENTER_COLOR_RED};\n`\n\n// let AtRight = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   right: 0;\n//   outline: solid 3px orange;\n// `\n\n// let AtLeft = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   left: 0;\n//   outline: solid 3px blue;\n// `\n\nlet Divider = styled.hr`\n  color: #fff;\n  margin: 10px 0;\n`\n\n// info - either null or string[]\n// center - element\n// stats - element\nfunction Layout ({ rightness, info, center, stats, left, right, done }) {\n  let rotateOnDone = useSpring({\n    config: {\n      friction: 1,\n      clamp: 1\n    },\n    from: {\n      width: '100%',\n      opacity: 1,\n      transform: 'rotate(0deg) scale(1)',\n      transformOrigin: 'center'\n    },\n    to: !done\n      ? []\n      : [\n          {\n            opacity: 0.5,\n            transform: 'rotate(360deg) scale(0.5)'\n          },\n          {\n            opacity: 0,\n            transform: 'rotate(0deg) scale(0)'\n          }\n        ]\n  })\n\n  let finished = useGetFinished()\n\n  return (\n    <Root finished={finished}>\n      <Global />\n      <CenterBox>\n        <Center>{center}</Center>\n      </CenterBox>\n      <animated.div style={rotateOnDone}>\n        <MyThreeColumns>\n          <div>{left}</div>\n          <Circle rightness={rightness} />\n          <div>{right}</div>\n        </MyThreeColumns>\n      </animated.div>\n      {!info ? null : (\n        <InfoBox>\n          <ul>\n            {info.map((x, i) => (\n              x === '---' ? <Divider key={i} /> :\n              <li key={i}>{x}</li>\n            ))}\n          </ul>\n        </InfoBox>\n      )}\n      <StatsBox>{stats}</StatsBox>\n    </Root>\n  )\n}\n\nexport default Layout\n","import { useSpring, animated } from 'react-spring'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CENTER_COLOR_GREEN, CENTER_COLOR_RED } from './Layout'\nimport Answers from './Answers'\n\nlet SelfCenter = styled.div`\n  transform: translate(-50%, -50%);\n`\nlet ParticleTemplate = styled.div`\n  position: absolute;\n  font-size: 32px;\n  white-space: nowrap;\n`\n\nlet Wrapper = styled.div`\n  text-decoration: ${p => (p.done ? 'none' : p.hit ? 'none' : 'line-through')};\n  color: ${p =>\n    p.done ? (p.hit ? CENTER_COLOR_GREEN : CENTER_COLOR_RED) : '#ddd'};\n`\n\nlet Tooltip = styled.div`\n  & > span {\n    display: none;\n  }\n\n  &:hover {\n    & > span {\n      display: block;\n    }\n  }\n\n  position: relative;\n`\nlet Details = styled.span`\n  position: absolute;\n  left: 0;\n  top: 30px;\n  background-color: white;\n  z-index: 100;\n`\n\nfunction Particle ({ x, y, children, hit, word, done, answers }) {\n  let props = useSpring({\n    transform: `translate(${x}px, ${y}px)`,\n    from: {\n      transform: `translate(${x}px, ${y}px)`\n    }\n  })\n  let content = !done ? (\n    word\n  ) : (\n    <Tooltip>\n      {word}\n      <Details>\n        <Answers answers={answers} />\n      </Details>\n    </Tooltip>\n  )\n  return (\n    <ParticleTemplate>\n      <animated.div style={props}>\n        <SelfCenter>\n          <Wrapper done={done} hit={hit}>\n            {content}\n          </Wrapper>\n        </SelfCenter>\n      </animated.div>\n    </ParticleTemplate>\n  )\n  // <Word input={x.input} word={x.word} finish={true} />\n  // </Particle>\n}\n\nexport default Particle\n","import { differenceInSeconds, subSeconds } from 'date-fns';\nimport React, { useState, useImperativeHandle, forwardRef, useEffect } from 'react'\nimport useInterval from '@use-it/interval'\n\nlet CHECK_INTERVAL = 100\n\nlet Timer = ({ durationSec: durationSecGiven, onDone, paused }, ref) => {\n  let [started, setStarted] = useState(null)\n  let [current, setCurrent] = useState(null)\n  let [done, setDone] = useState(false)\n  let [pausedAtDifference, setPausedAtDifference] = useState(null)\n  let [durationSecOwn, setDurationSecOwn] = useState(null)\n  // let [unPaused, setUnPaused] = useState(true)\n  let durationSec = durationSecOwn || durationSecGiven\n\n  useEffect(() => {\n    let now = new Date()\n    if (paused) {\n      let timeLeft = durationSec - differenceInSeconds(now, started)\n      setPausedAtDifference(timeLeft)\n      // setUnPaused(false)\n    } else {\n      if (pausedAtDifference) {\n        setStarted(now)\n        setDurationSecOwn(pausedAtDifference)\n        // setUnPaused(true)\n      }\n    }\n  }, [paused])\n\n  useInterval(() => {\n    if (done) return\n    if (paused) return\n    // if (!unPaused) return\n    if (!started) return\n\n    let now = new Date()\n    let difference = differenceInSeconds(now, started)\n    if (difference !== current) setCurrent(difference)\n    let timeLeft = durationSec - current\n    if (timeLeft <= 0) {\n      onDone()\n      setDone(true)\n    }\n  }, CHECK_INTERVAL)\n\n  useImperativeHandle(ref, () => ({\n    start: () => {\n      if (!started) setStarted(new Date())\n    },\n    finish: () => {\n      if (!done) {\n        onDone()\n        setDone(true)\n      }\n    }\n    // clear: () => to start after done have finished\n  }))\n\n  let timeLeft = durationSec - current\n\n  return <div>{timeLeft} sec.</div>\n}\nTimer = forwardRef(Timer)\n\nexport default Timer\n","const CARD_POINTS_KEY = 'CARD_POINTS_KEY'\nconst CARD_DELTAS_KEY = 'CARD_DELTAS_KEY'\nconst LAST_POINT_KEY = 'LAST_POINT_KEY'\n\nfunction storageGet(key, defaultValue) {\n  let got = localStorage.getItem(key)\n  if (got) return JSON.parse(got)\n  return defaultValue\n}\nfunction storageSet(key, value) {\n  value = JSON.stringify(value)\n  localStorage.setItem(key, value)\n}\n\nclass BrowserStorage {\n  constructor(allCards) {\n    this.allCards = allCards\n  }\n\n  getAllCards() {\n    return this.allCards\n  }\n\n  getCardPoints() {\n    return storageGet(CARD_POINTS_KEY, {})\n  }\n\n  _getLastPoint() {\n    return storageGet(LAST_POINT_KEY, 0)\n  }\n  _setLastPoint(value) {\n    storageSet(LAST_POINT_KEY, value)\n  }\n\n  getNewPoint() {\n    let point = this._getLastPoint() + 1\n    this._setLastPoint(point)\n    return point\n  }\n\n  _getCardDeltas() {\n    return storageGet(CARD_DELTAS_KEY, {})\n  }\n\n  getDelta(id) {\n    return this._getCardDeltas()[id] || 1\n  }\n\n  recordDelta(id, value) {\n    let data = this._getCardDeltas()\n    data[id] = value\n    storageSet(CARD_DELTAS_KEY, data)\n  }\n\n  recordPoint(id, value) {\n    let data = this.getCardPoints()\n    data[id] = value\n    storageSet(CARD_POINTS_KEY, data)\n  }\n}\n\nexport default BrowserStorage\n","class Deck {\n  constructor(cards) {\n    this.cards = cards\n  }\n  hasMore() {\n    return !!this.cards.length\n  }\n  takeNextCard() {\n    return this.cards.shift()\n  }\n}\n\nexport default Deck\n","class Player {\n  constructor(sessionDeck, zeroDeck) {\n    this.sessionDeck = sessionDeck\n    this.zeroDeck = zeroDeck\n  }\n  takeNextCard() {\n    if (this.sessionDeck.hasMore()) {\n      return this.sessionDeck.takeNextCard()\n    } else {\n      return this.zeroDeck.takeNextCard()\n    }\n  }\n}\n\nexport default Player\n","import Deck from './Deck'\nimport Player from './Player'\nimport { sortBy } from 'lodash'\n\nclass Session {\n  constructor(storage) {\n    this.storage = storage\n\n    let allCards = this.storage.getAllCards()\n    let cardPoints = this.storage.getCardPoints()\n    let point = this.storage.getNewPoint()\n    this.point = point\n\n    let {\n      zeroDeck,\n      sessionDeck\n    } = getDecks(allCards, cardPoints, point)\n\n    let player = new Player(sessionDeck, zeroDeck)\n    this.player = player\n  }\n\n  takeNextCard() {\n    let card = this.player.takeNextCard()\n    this.lastCard = card\n    this.storage.recordPoint(card.id, this.point)\n    return card\n  }\n\n  // delta = 1 for new cards from the zero deck\n  // so on the first right answer you get it in the second next session\n  recordHit() {\n    let id = this.lastCard.id\n    let delta = this.storage.getDelta(id) + 1\n    let point = this.point + delta\n    this.storage.recordDelta(id, delta)\n    this.storage.recordPoint(id, point)\n  }\n\n  recordMiss() {\n    let id = this.lastCard.id\n    let delta = 1\n    let point = this.point + delta\n    this.storage.recordDelta(id, delta)\n    this.storage.recordPoint(id, point)\n  }\n}\n\nfunction getDecks(allCards, cardPoints, point) {\n  let zeroCards = allCards.filter(x => !cardPoints[x.id])\n  let zeroDeck = new Deck(zeroCards)\n\n  let readyIds = getReadyCardIds(cardPoints, point)\n  let sessionCards = readyIds.map(id =>\n    // eslint-disable-next-line\n    allCards.find(x => x.id == id)\n  )\n  let sessionDeck = new Deck(sessionCards)\n\n  return {\n    zeroDeck,\n    sessionDeck,\n  }\n}\n\nfunction getReadyCardIds(cardPoints, point) {\n  let result = Object.entries(cardPoints)\n    .filter(([id, cardPoint]) =>\n      cardPoint <= point\n    )\n  result = sortBy(result, x => x[0]) // id\n  return result.map(([id, _point]) => id)\n}\n\nexport default Session\n","import BrowserStorage from './logic/BrowserStorage';\nimport Session from './logic/Session';\n\nlet sessionSingleton = null\n\nfunction getSession(allCards) {\n  if (sessionSingleton) return sessionSingleton\n  let storage = new BrowserStorage(allCards)\n  sessionSingleton = new Session(storage)\n  return sessionSingleton\n}\n\nexport default getSession\n","import { useState } from 'react'\nimport { useKeyboard } from '../utility'\n\nfunction useDrawing() {\n  let [editing, setEditing] = useState(false)\n  let toggleEditing = () => setEditing(!editing)\n\n  function handleKeyboard (e) {\n    if (e.key === 'Insert') {\n      toggleEditing()\n    }\n  }\n  useKeyboard(handleKeyboard)\n\n  return [editing, setEditing]\n}\n\nexport default useDrawing\n","import { animated, useSpring } from 'react-spring'\nimport { sample, escapeRegExp, times } from 'lodash'\nimport React, { useState, useRef } from 'react'\n\nimport { JustInput } from './Word'\nimport { animateParticles, distance, ending, useKeyboard } from './utility'\nimport { useSetFinished } from './hooks/useFinished';\nimport Answers from './Answers'\nimport Drawable from './Drawable';\nimport Layout from './Layout'\nimport Particle from './Particle'\nimport Timer from './Timer'\nimport getSession from './getSession';\nimport useDrawing from './hooks/useDrawing';\n\nlet DURATION = 60\n\nlet INFO = [\n  'Type a translation with enter when you are ready',\n  'After any input the timer starts',\n  '---',\n  '«ä» can be produced by typing «a:» or «a\"»',\n  '«ß» can be replaced with just «ss»',\n  'Omit «der/die/das» if you feel like',\n  '---',\n  'If you need to restart — reload the page',\n  'Press esc to finish early',\n  '---',\n  'Press «insert» to enter/exit drawing mode',\n  'Press «delete» to delete last line',\n  'The drawing will be associated with the current word',\n  'Entering the drawing mode is how you pouse the timer at this point',\n]\n\nlet A_LETTER = /^.$/\n\nfunction matches (word, answers) {\n  let re = new RegExp(`\\b${escapeRegExp(word)}\\b`)\n\n  let answer = answers.find(x => {\n    let expectedWord = x.word\n    let withNoSS = expectedWord.replace(/ß/g, 'ss')\n\n    let versions = [expectedWord, withNoSS]\n\n    let addMore = f => {\n      let got = versions.map(f)\n      versions.push(...got)\n    }\n\n    if (x.gender === 'm') addMore(x => `der ${x}`)\n    if (x.gender === 'f') addMore(x => `die ${x}`)\n    if (x.gender === 'n') addMore(x => `das ${x}`)\n\n    return versions.find(x => x === word || x.match(re))\n  })\n  return !!answer\n}\n\nfunction Typing () {\n  let [started, setStarted] = useState(false)\n  let [done, setDone] = useState(false)\n  let [good, setGood] = useState(0)\n  let [bad, setBad] = useState(0)\n\n  let [input, setInput] = useState('')\n  let [particles, setParticles] = useState([])\n  // let [wordIndex, setWordIndex] = useState(0)\n  let [card, setCard] = useState(null)\n  card = getSession().lastCard\n  if (!card) {\n    setCard(getSession().lastCard)\n  }\n  let question = card ? card : { question: '', answers: [] }\n\n  let [isChecking, setChecking] = useState(false)\n  let [isHit, setHit] = useState(false)\n\n  let nextWord = () => {\n    let moreParticles = []\n    times(1, () => {\n      let { dx, dy } = distance()\n      let particle = {\n        input,\n        word: question.question,\n        answers: question.answers,\n        x: dx,\n        y: dy,\n        hit: isHit\n      }\n\n      moreParticles.push(particle)\n    })\n\n    setParticles(particles.concat(moreParticles))\n    setCard(getSession().takeNextCard())\n    setInput('')\n  }\n\n  let startGame = () => {\n    timerRef.current.start()\n    setStarted(true)\n  }\n\n  function handleKeyboard (e) {\n    if (done) return\n    if (e.ctrlKey) return // reloading ctrl+r\n\n    let ignore = isChecking\n\n    if (e.key === 'Escape') {\n      timerRef.current.finish()\n    } else if (e.key === 'Enter') {\n      startGame()\n      // if (input === '') return // NOTE: double presses are ok.....\n      if (isChecking) {\n        setChecking(false)\n        nextWord()\n      } else {\n        input = input.trim()\n        if (!input) {\n          input = noInput()\n          setInput(input)\n        }\n\n        let hit = matches(input, question.answers)\n\n        if (hit) {\n          setGood(good + 1)\n          getSession().recordHit()\n        } else {\n          setBad(bad + 1)\n          getSession().recordMiss()\n        }\n\n        setHit(hit)\n        setChecking(true)\n      }\n    } else if (e.key === 'Backspace') {\n      if (ignore) return\n      setInput(input.substring(0, input.length - 1))\n    } else if (A_LETTER.test(e.key)) {\n      if (ignore) return\n      startGame()\n      input += e.key\n      setInput(applyUmlauts(input))\n    }\n  }\n\n  useKeyboard(handleKeyboard)\n\n  let timerRef = useRef()\n\n  let setFinished = useSetFinished()\n\n  let onTimer = () => {\n    setFinished(true)\n    setDone(true)\n    let animation = animateParticles(particles, setParticles)\n    animation()\n  }\n\n  let [drawing, setDrawing] = useDrawing()\n\n  let targetColor = done ? '#06c' : 'gray'\n  let props = useSpring({\n    color: targetColor,\n    padding: done ? 30 : 0,\n    from: {\n      color: 'gray',\n      padding: 0\n    }\n  })\n  let hideOnDone = useSpring({ opacity: done ? 0 : 1, from: { opacity: 1 } })\n\n  let rightness = isChecking ? isHit : null\n  return (\n    <>\n      <Drawable\n        question={question.question}\n        drawing={drawing}\n      />\n    <Layout\n      done={done}\n      rightness={rightness}\n      info={started ? null : INFO}\n      center={particles.map((x, i) => (\n        <Particle\n          answers={x.answers}\n          x={x.x}\n          y={x.y}\n          hit={x.hit}\n          word={x.word}\n          key={i}\n          done={done}\n        />\n      ))}\n      left={question.question}\n      right={\n        <>\n          <JustInput input={input} rightness={rightness} />\n          {!isChecking ? null : (\n            <div>\n              <Answers answers={question.answers} />\n            </div>\n          )}\n        </>\n      }\n      stats={\n        <animated.div style={props}>\n          <animated.div style={hideOnDone}>\n            <Timer\n              ref={timerRef}\n              durationSec={DURATION}\n              onDone={onTimer}\n              paused={drawing}\n            />\n          </animated.div>\n          <div>\n            {good} hit{ending(good, 's')}\n          </div>\n          <div>\n            {bad} miss{ending(bad, 'es')}\n          </div>\n        </animated.div>\n      }\n    />\n  </>\n  )\n}\n\nfunction applyUmlauts (text) {\n  if (text.length < 2) return text\n  let last = text[text.length - 1]\n  let beforeLast = text[text.length - 2]\n\n  if (last !== ':' && last !== '\"') return text\n\n  let use = letter => text.slice(0, text.length - 2) + letter\n\n  if (beforeLast === 'A') return use('Ä')\n  if (beforeLast === 'a') return use('ä')\n  if (beforeLast === 'O') return use('Ö')\n  if (beforeLast === 'o') return use('ö')\n  if (beforeLast === 'U') return use('Ü')\n  if (beforeLast === 'u') return use('ü')\n\n  return text\n}\n\nlet NO_INPUT = ['???']\nfunction noInput () {\n  return sample(NO_INPUT)\n}\n\nexport default Typing\n","import { shuffle } from 'lodash'\nimport React from 'react'\n\nimport { ProvideFinished } from './hooks/useFinished';\nimport Typing from './Typing'\nimport getSession from './getSession';\nimport questions from './data/questions.json'\n\nfunction App () {\n  let xs = questions\n  if (process.env.NODE_ENV === 'development') {\n    xs = xs.slice(0,3)\n  }\n  xs = shuffle(xs)\n  getSession(xs).takeNextCard() // just starts everything\n  return (\n    <ProvideFinished>\n      <Typing questions={xs} />\n    </ProvideFinished>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}