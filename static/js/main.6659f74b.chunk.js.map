{"version":3,"sources":["app/Word.js","app/utility.js","app/Answers.js","app/Layout.js","app/Particle.js","app/Timer.js","app/Typing.js","app/App.js","serviceWorker.js","index.js"],"names":["DefaultStyle","styled","div","RightStyle","WrongStyle","JustInput","Wrapper","input","rightness","ending","number","hide","className","AnswerListTemplate","ul","MStyle","FStyle","NStyle","NoStyle","Answers","answers","map","x","i","key","m","gender","f","n","prefix","word","withGender","Global","createGlobalStyle","Root","InfoBox","StatsBox","CenterBox","Center","MyThreeColumns","Circle","p","Layout","info","center","stats","left","right","done","rotateOnDone","useSpring","config","friction","clamp","from","width","opacity","transform","transformOrigin","to","style","SelfCenter","ParticleTemplate","hit","Tooltip","Details","span","Particle","y","children","props","content","Timer","ref","durationSec","onDone","useState","started","setStarted","current","setCurrent","setDone","useInterval","now","Date","difference","differenceInSeconds","useImperativeHandle","start","finish","timeLeft","forwardRef","DURATION","INFO","A_LETTER","NO_INPUT","Typing","questions","good","setGood","bad","setBad","setInput","particles","setParticles","wordIndex","setWordIndex","question","isChecking","setChecking","isHit","setHit","nextWord","moreParticles","times","angle","random","Math","PI","distance","dx","cos","dy","sin","particle","push","concat","startGame","timerRef","handleKeyboard","useEffect","document","addEventListener","removeEventListener","useKeyboard","e","ctrlKey","ignore","trim","sample","re","RegExp","escapeRegExp","find","expectedWord","withNoSS","replace","versions","addMore","got","match","matches","substring","length","test","text","last","beforeLast","use","letter","slice","applyUmlauts","useRef","targetColor","color","padding","hideOnDone","xs","setter","links","index","source","target","simulation","forceSimulation","force","forceLink","forceCollide","forceCenter","tick","animateParticles","animation","App","shuffle","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6659f74b.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nlet DefaultStyle = styled.div`\n  color: #06c;\n`\nlet RightStyle = styled.div`\n  color: #0c6;\n`\nlet WrongStyle = styled.div`\n  color: #c66;\n`\n\nexport function JustInput({ input, rightness }) {\n  let Wrapper\n  if (rightness === null) Wrapper = DefaultStyle\n  if (rightness === true) Wrapper = RightStyle\n  if (rightness === false) Wrapper = WrongStyle\n\n  return <Wrapper>{input}</Wrapper>\n}\n","import {\n  forceCenter,\n  forceCollide,\n  forceLink,\n  forceSimulation\n} from 'd3-force';\nimport { random, times } from 'lodash';\nimport React, { useEffect } from 'react';\n\nexport function ending (number, ending) {\n  let hide = number === 1 ? 'hide' : 'show'\n  return <span className={hide}>{ending}</span>\n}\n\nexport function distance () {\n  let angle = random(0, Math.PI * 2, true)\n  let distance = random(400, 500)\n  let dx = distance * Math.cos(angle)\n  let dy = distance * Math.sin(angle)\n  return { dx, dy }\n}\n\nexport function useKeyboard (handleKeyboard) {\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboard)\n    return () => {\n      document.removeEventListener('keydown', handleKeyboard)\n    }\n  })\n}\n\nexport function animateParticles(xs, setter) {\n  let links = []\n  let index = 0\n  times(xs.length, x => {\n    times(xs.length, y => {\n      links.push({ source: x, target: y, index })\n      index += 1\n    })\n  })\n  let simulation = forceSimulation(xs)\n    .force('links', forceLink(links))\n    .force('collide', forceCollide(100))\n    .force('center', forceCenter())\n\n  return () => {\n    simulation.tick(100)\n    xs = [...xs]\n    setter(xs)\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components'\n\nlet AnswerListTemplate = styled.ul`\n  list-style: none;\n  font-size: 50%;\n  color: #888;\n`\n\nlet Answers = ({ answers }) =>\n  <AnswerListTemplate>\n    {\n      answers.map((x, i) =>\n        <li key={i}>{ withGender(x) }</li>\n      )\n    }\n  </AnswerListTemplate>\n\nlet MStyle = styled.div`\n  // color: #66f;\n`\nlet FStyle = styled.div`\n  // color: #f66;\n`\nlet NStyle = styled.div`\n  // color: #666;\n`\nlet NoStyle = styled.div``\n\nfunction withGender(x) {\n  let m = x.gender === 'm'\n  let f = x.gender === 'f'\n  let n = x.gender === 'n'\n\n  let prefix = ''\n  if (m) prefix = 'der '\n  if (f) prefix = 'die '\n  if (n) prefix = 'das '\n\n  let Wrapper = NoStyle\n  if (m) Wrapper = MStyle\n  if (f) Wrapper = FStyle\n  if (n) Wrapper = NStyle\n\n  return <Wrapper>{`${prefix}${x.word}`}</Wrapper>\n}\n\nexport default Answers\n","import { useSpring, animated } from 'react-spring';\nimport React from 'react'\nimport styled, { createGlobalStyle } from 'styled-components';\n\nlet Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  html, body, #root, #root > div {\n    height: 100%;\n  }\n  .show, .hide {\n    transition: opacity 0.3s;\n  }\n  .show {\n    opacity: 1;\n  }\n  .hide {\n    opacity: 0;\n  }\n`\n\nlet Root = styled.div`\n  font-size: 48pt;\n  display: flex;\n  overflow: hidden;\n`\n\nlet InfoBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet StatsBox = styled.div`\n  position: fixed;\n  z-index: 100;\n  right: 0;\n  bottom: 0;\n  color: gray;\n  font-size: 32px;\n`\n\nlet CenterBox = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`\n\nlet Center = styled.div`\n  position: absolute;\n  left: 50%;\n  top: 50%;\n`\n\nlet CENTER_COLOR_DEFAULT = '#06c'\nexport let CENTER_COLOR_GREEN = '#0c6'\nexport let CENTER_COLOR_RED = '#c66'\n\nlet CENTER_DELTA = 38\nlet CENTER_SIZE = 10\nlet TOP = 30\nlet MIDDLE = 20\n\nlet MyThreeColumns = styled.div`\n  width: 100%;\n  display: flex;\n  > div {\n    top: ${TOP}%;\n    position: absolute;\n  }\n  > div:nth-child(1) {\n    right: calc(50% + ${MIDDLE}px);\n  }\n  > div:nth-child(2) {\n    // Circle below\n  }\n  > div:nth-child(3) {\n    left: calc(50% + ${MIDDLE}px);\n  }\n`\n\nlet Circle = styled.div`\n  left: 50%;\n  transform: translateY(${CENTER_DELTA}px) translateX(-50%);\n  height: ${CENTER_SIZE}px;\n  width: ${CENTER_SIZE}px;\n  border-radius: 50%;\n  background-color: ${p =>\n    p.rightness === null ? CENTER_COLOR_DEFAULT : (\n      p.rightness === true ? CENTER_COLOR_GREEN : CENTER_COLOR_RED\n    )\n  };\n`\n\n// let AtRight = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   right: 0;\n//   outline: solid 3px orange;\n// `\n\n// let AtLeft = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   left: 0;\n//   outline: solid 3px blue;\n// `\n\n// info - either null or string[]\n// center - element\n// stats - element\nfunction Layout ({ rightness, info, center, stats, left, right, done }) {\n\n  let rotateOnDone = useSpring({\n    config: {\n      friction: 1,\n      clamp: 1\n    },\n    from: {\n      width: '100%',\n      opacity: 1,\n      transform: 'rotate(0deg) scale(1)',\n      transformOrigin: 'center',\n    },\n    to: !done\n      ? []\n      : [\n          {\n            opacity: 0.5,\n            transform: 'rotate(360deg) scale(0.5)'\n          },\n          {\n            opacity: 0,\n            transform: 'rotate(0deg) scale(0)'\n          }\n        ]\n  })\n\n  return (\n    <Root>\n      <Global />\n      <CenterBox>\n        <Center>\n          {center}\n        </Center>\n      </CenterBox>\n      <animated.div style={rotateOnDone}>\n        <MyThreeColumns>\n          <div>\n            {left}\n          </div>\n          <Circle rightness={rightness} />\n          <div>\n            {right}\n          </div>\n        </MyThreeColumns>\n      </animated.div>\n      {!info ? null : (\n        <InfoBox>\n          <ul>\n            {info.map((x, i) => (\n              <li key={i}>{x}</li>\n            ))}\n          </ul>\n        </InfoBox>\n      )}\n      <StatsBox>{stats}</StatsBox>\n    </Root>\n  )\n}\n\nexport default Layout\n","import { useSpring, animated } from 'react-spring';\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { CENTER_COLOR_GREEN, CENTER_COLOR_RED } from './Layout';\nimport Answers from './Answers';\n\nlet SelfCenter = styled.div`\n  transform: translate(-50%, -50%);\n`\nlet ParticleTemplate = styled.div`\n  position: absolute;\n  font-size: 32px;\n  white-space: nowrap;\n`\n\nlet Wrapper = styled.div`\n  text-decoration: ${p => p.done ? 'none' : p.hit ? 'none' : 'line-through'};\n  color: ${p => p.done ? p.hit ? CENTER_COLOR_GREEN : CENTER_COLOR_RED : '#ddd'};\n\n`\n\nlet Tooltip = styled.div`\n  & > span {\n    display: none;\n  }\n\n  &:hover {\n    & > span {\n      display: block;\n    }\n  }\n\n  position: relative;\n`\nlet Details = styled.span`\n  position: absolute;\n  left: 0;\n  top: 30px;\n  background-color: white;\n  z-index: 100;\n`\n\n\nfunction Particle ({ x, y, children, hit, word, done, answers }) {\n  let props = useSpring({\n    transform: `translate(${x}px, ${y}px)`,\n    from: {\n      transform: `translate(${x}px, ${y}px)`,\n    }\n  })\n  let content = !done ? word : <Tooltip>\n    {word}\n    <Details>\n      <Answers answers={answers} />\n    </Details>\n  </Tooltip>\n  return (\n    <ParticleTemplate>\n      <animated.div style={props}>\n        <SelfCenter>\n          <Wrapper done={done} hit={hit}>\n            {content}\n          </Wrapper>\n        </SelfCenter>\n      </animated.div>\n    </ParticleTemplate>\n  )\n            // <Word input={x.input} word={x.word} finish={true} />\n          // </Particle>\n}\n\nexport default Particle\n","import { differenceInSeconds } from 'date-fns'\nimport React, { useState, useImperativeHandle, forwardRef } from 'react'\nimport useInterval from '@use-it/interval'\n\nlet CHECK_INTERVAL = 100\n\nlet Timer = ({ durationSec, onDone }, ref) => {\n  let [started, setStarted] = useState(null)\n  let [current, setCurrent] = useState(null)\n  let [done, setDone] = useState(false)\n\n  useInterval(() => {\n    if (done) return\n    if (!started) return\n\n    let now = new Date()\n    let difference = differenceInSeconds(now, started)\n    if (difference !== current) setCurrent(difference)\n    let timeLeft = durationSec - current\n    if (timeLeft <= 0) {\n      onDone()\n      setDone(true)\n    }\n  }, CHECK_INTERVAL)\n\n  useImperativeHandle(ref, () => ({\n    start: () => {\n      if (!started) setStarted(new Date())\n    },\n    finish: () => {\n      if (!done) {\n        onDone()\n        setDone(true)\n      }\n    },\n    // clear: () => to start after done have finished\n  }))\n\n  let timeLeft = durationSec - current\n\n  return <div>{timeLeft} sec.</div>\n}\nTimer = forwardRef(Timer)\n\nexport default Timer\n","import { animated, useSpring } from 'react-spring'\nimport { sample, escapeRegExp, times } from 'lodash'\nimport React, { useState, useRef } from 'react'\n\nimport { JustInput } from './Word';\nimport { animateParticles, distance, ending, useKeyboard } from './utility';\nimport Answers from './Answers';\nimport Layout from './Layout'\nimport Particle from './Particle'\nimport Timer from './Timer'\n\nlet DURATION = 10\n\nlet INFO = [\n  'Type a translation with enter when you are ready',\n  'Umlauts can be produced by typing a: or a\"',\n  'ß can be replaced with just \"ss\"',\n  'The timer starts after any input',\n  'If you need to restart — reload the page'\n]\n\nlet A_LETTER = /^.$/\n\n\nfunction matches(word, answers) {\n  let re = new RegExp(`\\b${escapeRegExp(word)}\\b`)\n\n  let answer = answers.find(x => {\n    let expectedWord = x.word\n    let withNoSS = expectedWord.replace(/ß/g, 'ss')\n\n    let versions = [\n      expectedWord,\n      withNoSS,\n    ]\n\n    let addMore = f => {\n      let got = versions.map(f)\n      versions.push(...got)\n    }\n\n    if (x.gender === 'm') addMore(x => `der ${x}`)\n    if (x.gender === 'f') addMore(x => `die ${x}`)\n    if (x.gender === 'n') addMore(x => `das ${x}`)\n\n    return versions.find(x => x === word || x.match(re))\n  })\n  return !!answer\n}\n\nfunction Typing ({ questions }) {\n  let [started, setStarted] = useState(false)\n  let [done, setDone] = useState(false)\n  let [good, setGood] = useState(0)\n  let [bad, setBad] = useState(0)\n\n  let [input, setInput] = useState('')\n  let [particles, setParticles] = useState([])\n  let [wordIndex, setWordIndex] = useState(0)\n  let question = questions[wordIndex]\n\n  let [isChecking, setChecking] = useState(false)\n  let [isHit, setHit] = useState(false)\n\n  let nextWord = () => {\n    let moreParticles = []\n    times(1,() => {\n      let { dx, dy } = distance()\n      let particle = {\n        input,\n        word: question.question,\n        answers: question.answers,\n        x: dx, y: dy,\n        hit: isHit\n      }\n\n      moreParticles.push(particle)\n    })\n\n    setParticles(particles.concat(moreParticles))\n    setWordIndex(wordIndex + 1)\n    setInput('')\n  }\n\n  let startGame = () => {\n    timerRef.current.start()\n    setStarted(true)\n  }\n\n  function handleKeyboard (e) {\n    if (done) return\n    if (e.ctrlKey) return // reloading ctrl+r\n\n    let ignore = isChecking\n\n    if (e.key === 'Escape') {\n      timerRef.current.finish()\n    } else\n    if (e.key === 'Enter') {\n      startGame()\n      // if (input === '') return // NOTE: double presses are ok.....\n      if (isChecking) {\n        setChecking(false)\n        nextWord()\n      } else {\n        input = input.trim()\n        if (!input) {\n          input = noInput()\n          setInput(input)\n        }\n\n        let hit = matches(input, question.answers)\n\n        if (hit) {\n          setGood(good + 1)\n        } else {\n          setBad(bad + 1)\n        }\n\n        setHit(hit)\n        setChecking(true)\n      }\n    } else if (e.key === 'Backspace') {\n      if (ignore) return\n      setInput(input.substring(0, input.length - 1))\n    } else if (A_LETTER.test(e.key)) {\n      if (ignore) return\n      startGame()\n      input += e.key\n      setInput(applyUmlauts(input))\n    }\n  }\n\n  useKeyboard(handleKeyboard)\n\n  let timerRef = useRef()\n\n  let onTimer = () => {\n    setDone(true)\n    let animation = animateParticles(particles, setParticles)\n    animation()\n  }\n\n  let targetColor = done ? '#06c' : 'gray'\n  let props = useSpring({\n    color: targetColor,\n    padding: done ? 30 : 0,\n    from: {\n      color: 'gray',\n      padding: 0\n    }\n  })\n  let hideOnDone = useSpring({ opacity: done ? 0 : 1, from: { opacity: 1 } })\n\n  let rightness = isChecking ? isHit : null\n  return (\n    <Layout\n      done={done}\n      rightness={rightness}\n      info={started ? null : INFO}\n      center={\n        particles.map((x, i) => (\n          <Particle\n            answers={x.answers}\n            x={x.x} y={x.y}\n            hit={x.hit}\n            word={x.word}\n            key={i}\n            done={done}\n          />\n        ))\n      }\n      left={question.question}\n      right={<>\n        <JustInput input={input} rightness={rightness} />\n        { !isChecking ? null :\n          <div>\n            <Answers answers={question.answers} />\n          </div>\n        }\n      </>}\n      stats={\n        <animated.div style={props}>\n          <animated.div style={hideOnDone}>\n            <Timer ref={timerRef} durationSec={DURATION} onDone={onTimer} />\n          </animated.div>\n          <div>\n            {good} hit{ending(good, 's')}\n          </div>\n          <div>\n            {bad} miss{ending(bad, 'es')}\n          </div>\n        </animated.div>\n      }\n    />\n  )\n}\n\nfunction applyUmlauts(text) {\n  if (text.length < 2) return text\n  let last = text[text.length - 1]\n  let beforeLast = text[text.length - 2]\n\n  if (last !== ':' && last !== '\"') return text\n\n  let use = letter =>\n    text.slice(0, text.length - 2) + letter\n\n  if (beforeLast === 'A') return use('Ä')\n  if (beforeLast === 'a') return use('ä')\n  if (beforeLast === 'O') return use('Ö')\n  if (beforeLast === 'o') return use('ö')\n  if (beforeLast === 'U') return use('Ü')\n  if (beforeLast === 'u') return use('ü')\n\n  return text\n}\n\nlet NO_INPUT = [\n  '???',\n]\nfunction noInput() {\n  return sample(NO_INPUT)\n}\n\nexport default Typing\n","import React from 'react'\n\nimport Typing from './Typing'\nimport questions from './data/questions.json'\nimport { shuffle } from 'lodash'\n\nfunction App () {\n  let xs = shuffle(questions)\n  return <Typing questions={xs} />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}